{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\util\\\\blob-to-image.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React from 'react';\n\n// const BlobToImage = (props) => {\n\n//   // Check if blobData is null or undefined\n//   if (props === null || props === undefined) {\n//     return null;\n//   }\n\n//   const { byteArray } = props;\n\n//   if (byteArray.length > 1) {\n//     // Handle a collection of binary blobs\n//     return (\n//       <div>\n//         {byteArray.map((byteData, index) => {\n//           const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\n//           const imageUrl = URL.createObjectURL(blob);\n//           return (\n//             <div key={index}>\n//               <img src={imageUrl} alt={`Image ${index}`} />\n//             </div>\n//           );\n//         })}\n//       </div>\n//     );\n//   } else {\n//     const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\n//     const imageUrl = URL.createObjectURL(blob);\n//     return <img src={imageUrl} alt=\"Image couldn't be found\" />;\n//   }\n// }\n\n// export default BlobToImage;\n\nconst BlobToImage = props => {\n  const {\n    byteArray\n  } = props;\n  let images = [];\n\n  //Check if blobData is null or undefined\n  if (props === null || props === undefined) {\n    return null;\n  }\n  if (Array.isArray(byteArray)) {\n    images = byteArray.map((byteData, index) => {\n      const blob = new Blob([new Uint8Array(byteData)], {\n        type: 'image/jpeg'\n      });\n      const imageUrl = URL.createObjectURL(blob);\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Image ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    });\n  } else {\n    const blob = new Blob([new Uint8Array(byteArray)], {\n      type: 'image/jpeg'\n    });\n    const imageUrl = URL.createObjectURL(blob);\n    images.push( /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Image\"\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_c = BlobToImage;\nexport default BlobToImage;\nvar _c;\n$RefreshReg$(_c, \"BlobToImage\");","map":{"version":3,"names":["BlobToImage","props","byteArray","images","undefined","Array","isArray","map","byteData","index","blob","Blob","Uint8Array","type","imageUrl","URL","createObjectURL","_jsxDEV","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","push","children","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/blob-to-image.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// const BlobToImage = (props) => {\r\n\r\n//   // Check if blobData is null or undefined\r\n//   if (props === null || props === undefined) {\r\n//     return null;\r\n//   }\r\n\r\n//   const { byteArray } = props;\r\n\r\n//   if (byteArray.length > 1) {\r\n//     // Handle a collection of binary blobs\r\n//     return (\r\n//       <div>\r\n//         {byteArray.map((byteData, index) => {\r\n//           const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\r\n//           const imageUrl = URL.createObjectURL(blob);\r\n//           return (\r\n//             <div key={index}>\r\n//               <img src={imageUrl} alt={`Image ${index}`} />\r\n//             </div>\r\n//           );\r\n//         })}\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\r\n//     const imageUrl = URL.createObjectURL(blob);\r\n//     return <img src={imageUrl} alt=\"Image couldn't be found\" />;\r\n//   }\r\n// }\r\n\r\n// export default BlobToImage;\r\n\r\nconst BlobToImage = (props) => {\r\n  const { byteArray } = props;\r\n  let images = [];\r\n\r\n  //Check if blobData is null or undefined\r\n  if (props === null || props === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (Array.isArray(byteArray)) {\r\n    images = byteArray.map((byteData, index) => {\r\n      const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\r\n      const imageUrl = URL.createObjectURL(blob);\r\n      return <img key={index} src={imageUrl} alt={`Image ${index}`} />;\r\n    });\r\n  } else {\r\n    const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\r\n    const imageUrl = URL.createObjectURL(blob);\r\n    images.push(<img key={0} src={imageUrl} alt=\"Image\" />);\r\n  }\r\n\r\n  return <div>{images}</div>;\r\n}\r\n\r\nexport default BlobToImage;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMA,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC;EAAU,CAAC,GAAGD,KAAK;EAC3B,IAAIE,MAAM,GAAG,EAAE;;EAEf;EACA,IAAIF,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKG,SAAS,EAAE;IACzC,OAAO,IAAI;EACb;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,EAAE;IAC5BC,MAAM,GAAGD,SAAS,CAACK,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC1C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACJ,QAAQ,CAAC,CAAC,EAAE;QAAEK,IAAI,EAAE;MAAa,CAAC,CAAC;MACzE,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MAC1C,oBAAOO,OAAA;QAAiBC,GAAG,EAAEJ,QAAS;QAACK,GAAG,EAAG,SAAQV,KAAM;MAAE,GAA5CA,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CAAC;IAClE,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMb,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACV,SAAS,CAAC,CAAC,EAAE;MAAEW,IAAI,EAAE;IAAa,CAAC,CAAC;IAC1E,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IAC1CP,MAAM,CAACqB,IAAI,eAACP,OAAA;MAAaC,GAAG,EAAEJ,QAAS;MAACK,GAAG,EAAC;IAAO,GAA7B,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CAAC,CAAC;EACzD;EAEA,oBAAON,OAAA;IAAAQ,QAAA,EAAMtB;EAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5B,CAAC;AAAAG,EAAA,GAtBK1B,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}