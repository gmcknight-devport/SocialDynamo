{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Documents\\\\GitHub\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\util\\\\refresh-login.js\",\n  _s = $RefreshSig$();\n// import { useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom';\n// import * as ROUTES from '../constants/routes';\n// import { ToastContainer, toast } from \"react-toastify\";\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function RefreshLogin() {\n//     const userId = JSON.parse(localStorage.getItem('userId'))?.UserId || null;\n//     const url = JSON.parse(localStorage.getItem('url')) || null;\n//     const navigate = useNavigate();\n\n//     const handleRefreshToken = async () =>{\n\n//         console.log(\"In refresh login, handling refresh!\");\n\n//         const objMap = { userId };\n//         const finalBody = JSON.stringify(objMap);\n\n//         //Fetch data\n//         const response = await fetch(url + '/authentication/refresh-token', {\n//             method: 'PUT',\n//             include: 'cors',\n//             credentials: 'include',\n//             body: finalBody,\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         });\n\n//         if (!response.ok) {      \n//             localStorage.clear();  \n//             displayError(\"Session has expired and token cannot be refreshed. You will be redirected to login.\");\n//             handleModalClose();\n//         }\n//     };\n\n//     const handleModalClose = () => {        \n//         navigate(ROUTES.LOGIN);\n//     };\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             await handleRefreshToken();\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     const displayError = (message) => {\n//         toast.error(message);\n//     }\n\n//     return (\n//         <>        \n//         <div className='toast-cont'>\n//             <ToastContainer position='top-center' theme='light' />\n//         </div>\n//         </>\n//     );    \n// }\n\n// export default RefreshLogin\n\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RefreshToken() {\n  _s();\n  var _JSON$parse;\n  const userId = ((_JSON$parse = JSON.parse(localStorage.getItem('userId'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.UserId) || null;\n  const url = JSON.parse(localStorage.getItem('url')) || null;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleRefreshToken = async () => {\n      const objMap = {\n        userId\n      };\n      const finalBody = JSON.stringify(objMap);\n      const response = await fetch(url + '/authentication/refresh-token', {\n        method: 'PUT',\n        include: 'cors',\n        credentials: 'include',\n        body: finalBody,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        localStorage.clear();\n        displayError(\"Session has expired and token cannot be refreshed. You will be redirected to login.\");\n        navigate(ROUTES.LOGIN);\n      }\n    };\n    handleRefreshToken();\n  }, []);\n  const displayError = message => {\n    toast.error(message);\n  };\n  return /*#__PURE__*/_jsxDEV(ToastContainer, {\n    position: \"top-center\",\n    theme: \"light\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(RefreshToken, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = RefreshToken;\nexport default RefreshToken;\nvar _c;\n$RefreshReg$(_c, \"RefreshToken\");","map":{"version":3,"names":["useEffect","useNavigate","ROUTES","ToastContainer","toast","jsxDEV","_jsxDEV","RefreshToken","_s","_JSON$parse","userId","JSON","parse","localStorage","getItem","UserId","url","navigate","handleRefreshToken","objMap","finalBody","stringify","response","fetch","method","include","credentials","body","headers","ok","clear","displayError","LOGIN","message","error","position","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/refresh-login.js"],"sourcesContent":["// import { useEffect } from 'react'\r\n// import { useNavigate } from 'react-router-dom';\r\n// import * as ROUTES from '../constants/routes';\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// function RefreshLogin() {\r\n//     const userId = JSON.parse(localStorage.getItem('userId'))?.UserId || null;\r\n//     const url = JSON.parse(localStorage.getItem('url')) || null;\r\n//     const navigate = useNavigate();\r\n        \r\n//     const handleRefreshToken = async () =>{\r\n\r\n\r\n//         console.log(\"In refresh login, handling refresh!\");\r\n\r\n\r\n//         const objMap = { userId };\r\n//         const finalBody = JSON.stringify(objMap);\r\n        \r\n//         //Fetch data\r\n//         const response = await fetch(url + '/authentication/refresh-token', {\r\n//             method: 'PUT',\r\n//             include: 'cors',\r\n//             credentials: 'include',\r\n//             body: finalBody,\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//         });\r\n\r\n//         if (!response.ok) {      \r\n//             localStorage.clear();  \r\n//             displayError(\"Session has expired and token cannot be refreshed. You will be redirected to login.\");\r\n//             handleModalClose();\r\n//         }\r\n//     };\r\n\r\n//     const handleModalClose = () => {        \r\n//         navigate(ROUTES.LOGIN);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             await handleRefreshToken();\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const displayError = (message) => {\r\n//         toast.error(message);\r\n//     }\r\n\r\n//     return (\r\n//         <>        \r\n//         <div className='toast-cont'>\r\n//             <ToastContainer position='top-center' theme='light' />\r\n//         </div>\r\n//         </>\r\n//     );    \r\n// }\r\n\r\n// export default RefreshLogin\r\n\r\n\r\n\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction RefreshToken() {\r\n    const userId = JSON.parse(localStorage.getItem('userId'))?.UserId || null;\r\n    const url = JSON.parse(localStorage.getItem('url')) || null;\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const handleRefreshToken = async () => {\r\n            const objMap = { userId };\r\n            const finalBody = JSON.stringify(objMap);\r\n\r\n            const response = await fetch(url + '/authentication/refresh-token', {\r\n                method: 'PUT',\r\n                include: 'cors',\r\n                credentials: 'include',\r\n                body: finalBody,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                localStorage.clear();\r\n                displayError(\"Session has expired and token cannot be refreshed. You will be redirected to login.\");\r\n                navigate(ROUTES.LOGIN);\r\n            }\r\n        };\r\n\r\n        handleRefreshToken();\r\n    }, []);\r\n\r\n    const displayError = (message) => {\r\n        toast.error(message);\r\n    }\r\n\r\n    return (\r\n        <ToastContainer position='top-center' theme='light' />\r\n    );\r\n}\r\n\r\nexport default RefreshToken;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,MAAM,MAAM,qBAAqB;AAC7C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACpB,MAAMC,MAAM,GAAG,EAAAD,WAAA,GAAAE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAAL,WAAA,uBAA1CA,WAAA,CAA4CM,MAAM,KAAI,IAAI;EACzE,MAAMC,GAAG,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI;EAC3D,MAAMG,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMkB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,MAAM,GAAG;QAAET;MAAO,CAAC;MACzB,MAAMU,SAAS,GAAGT,IAAI,CAACU,SAAS,CAACF,MAAM,CAAC;MAExC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,GAAG,+BAA+B,EAAE;QAChEQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,MAAM;QACfC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEP,SAAS;QACfQ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QACdhB,YAAY,CAACiB,KAAK,CAAC,CAAC;QACpBC,YAAY,CAAC,qFAAqF,CAAC;QACnGd,QAAQ,CAACf,MAAM,CAAC8B,KAAK,CAAC;MAC1B;IACJ,CAAC;IAEDd,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,YAAY,GAAIE,OAAO,IAAK;IAC9B7B,KAAK,CAAC8B,KAAK,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,oBACI3B,OAAA,CAACH,cAAc;IAACgC,QAAQ,EAAC,YAAY;IAACC,KAAK,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE9D;AAAChC,EAAA,CArCQD,YAAY;EAAA,QAGAN,WAAW;AAAA;AAAAwC,EAAA,GAHvBlC,YAAY;AAuCrB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}