{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../context/firebase';\nexport default function useAuthListener() {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        // we have a user...therefore we can store the user in localstorage\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        // we don't have an authUser, therefore clear the localstorage\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, [firebase]);\n  return {\n    user\n  };\n}\n_s(useAuthListener, \"og5KOqGEvEXX6clV2sRD6qnxvZ4=\");","map":{"version":3,"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","_s","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/hooks/use-auth-listener.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../context/firebase';\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const { firebase } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // we have a user...therefore we can store the user in localstorage\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        // we don't have an authUser, therefore clear the localstorage\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n\n    return () => listener();\n  }, [firebase]);\n\n  return { user };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,eAAe,MAAM,qBAAqB;AAEjD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;EAC9E,MAAM;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACC,eAAe,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MAChE,IAAIA,QAAQ,EAAE;QACZ;QACAN,YAAY,CAACO,OAAO,CAAC,UAAU,EAAET,IAAI,CAACU,SAAS,CAACF,QAAQ,CAAC,CAAC;QAC1DT,OAAO,CAACS,QAAQ,CAAC;MACnB,CAAC,MAAM;QACL;QACAN,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;QACnCZ,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;IAEF,OAAO,MAAMM,QAAQ,CAAC,CAAC;EACzB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEN;EAAK,CAAC;AACjB;AAACD,EAAA,CArBuBD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}