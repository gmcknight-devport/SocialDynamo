{"ast":null,"code":"import * as ROUTES from '../constants/Routes';\nconst RefreshLogin = async navigate => {\n  const RefreshLoginToken = async () => {\n    var _JSON$parse;\n    const userId = ((_JSON$parse = JSON.parse(localStorage.getItem('userId'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.userId) || null;\n    const url = JSON.parse(localStorage.getItem('url')) || null;\n    const objMap = {\n      userId\n    };\n    const finalBody = JSON.stringify(objMap);\n    const redirect = () => {\n      localStorage.clear();\n      localStorage.setItem('RefreshFailed', JSON.stringify(true));\n      navigate(ROUTES.LOGIN);\n      return false;\n    };\n    try {\n      // Fetch data\n      const response = await fetch(url + '/authentication/refresh-token', {\n        method: 'PUT',\n        include: 'cors',\n        credentials: 'include',\n        body: finalBody,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        return true;\n      }\n\n      //Clear otherwise and return to login - avoiding potential for loops\n      redirect();\n    } catch (error) {\n      redirect();\n    }\n  };\n  return await RefreshLoginToken();\n};\n_c = RefreshLogin;\nexport default RefreshLogin;\nvar _c;\n$RefreshReg$(_c, \"RefreshLogin\");","map":{"version":3,"names":["ROUTES","RefreshLogin","navigate","RefreshLoginToken","_JSON$parse","userId","JSON","parse","localStorage","getItem","url","objMap","finalBody","stringify","redirect","clear","setItem","LOGIN","response","fetch","method","include","credentials","body","headers","ok","error","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/RefreshLogin.js"],"sourcesContent":["import * as ROUTES from '../constants/Routes';\r\n\r\nconst RefreshLogin = async (navigate) => {\r\n\r\n    const RefreshLoginToken = async () => {            \r\n        const userId = JSON.parse(localStorage.getItem('userId'))?.userId || null;\r\n        const url = JSON.parse(localStorage.getItem('url')) || null;\r\n    \r\n        const objMap = { userId };\r\n        const finalBody = JSON.stringify(objMap);\r\n    \r\n        const redirect = () => {\r\n            localStorage.clear();\r\n            localStorage.setItem('RefreshFailed', JSON.stringify(true));\r\n            navigate(ROUTES.LOGIN);\r\n            return false;\r\n        }\r\n        \r\n        try{\r\n            // Fetch data\r\n            const response = await fetch(url + '/authentication/refresh-token', {\r\n                method: 'PUT',\r\n                include: 'cors',\r\n                credentials: 'include',\r\n                body: finalBody,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            \r\n            if(response.ok){\r\n                return true;\r\n            }\r\n    \r\n            //Clear otherwise and return to login - avoiding potential for loops\r\n            redirect();\r\n        }catch(error){\r\n            redirect();\r\n        }\r\n    }\r\n    return await RefreshLoginToken();\r\n}    \r\n\r\nexport default RefreshLogin;"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,qBAAqB;AAE7C,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAErC,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,WAAA;IAClC,MAAMC,MAAM,GAAG,EAAAD,WAAA,GAAAE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAAL,WAAA,uBAA1CA,WAAA,CAA4CC,MAAM,KAAI,IAAI;IACzE,MAAMK,GAAG,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI;IAE3D,MAAME,MAAM,GAAG;MAAEN;IAAO,CAAC;IACzB,MAAMO,SAAS,GAAGN,IAAI,CAACO,SAAS,CAACF,MAAM,CAAC;IAExC,MAAMG,QAAQ,GAAGA,CAAA,KAAM;MACnBN,YAAY,CAACO,KAAK,CAAC,CAAC;MACpBP,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEV,IAAI,CAACO,SAAS,CAAC,IAAI,CAAC,CAAC;MAC3DX,QAAQ,CAACF,MAAM,CAACiB,KAAK,CAAC;MACtB,OAAO,KAAK;IAChB,CAAC;IAED,IAAG;MACC;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,GAAG,+BAA+B,EAAE;QAChEU,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,MAAM;QACfC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEX,SAAS;QACfY,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAGN,QAAQ,CAACO,EAAE,EAAC;QACX,OAAO,IAAI;MACf;;MAEA;MACAX,QAAQ,CAAC,CAAC;IACd,CAAC,QAAMY,KAAK,EAAC;MACTZ,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EACD,OAAO,MAAMX,iBAAiB,CAAC,CAAC;AACpC,CAAC;AAAAwB,EAAA,GAvCK1B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}