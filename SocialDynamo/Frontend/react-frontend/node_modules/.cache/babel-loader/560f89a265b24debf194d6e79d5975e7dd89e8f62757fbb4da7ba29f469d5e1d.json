{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\post\\\\image-carousel.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\n// import ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\n// import './image-carousel.css';\n// import './files.css';\n\n// const ImageCarousel= ({ images }) => {\n//     const [currentIndex, setCurrentIndex] = useState(0);\n\n//     console.log(\"Testing width is present: \" + images[0].width);\n\n//     const widths = images.map(img => Number(img.props.width));\n//     const heights = images.map(img => Number(img.props.height));\n\n//     const largestWidth = Math.max(...widths);\n//     const largestHeight = Math.max(...heights);\n\n//     console.log(\"largest width: \" + largestWidth);\n//     console.log(\"largest height: \" + largestHeight);\n\n//     const goToPrevious = () => {\n//         const isFirstImage = currentIndex === 0;\n//         const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\n//         setCurrentIndex(newIndex);\n//     };\n\n//     const goToNext = () => {\n//         const isLastImage = currentIndex === images.length - 1;\n//         const newIndex = isLastImage ? 0 : currentIndex + 1;\n//         setCurrentIndex(newIndex);\n//     };\n\n//     const goToSlide = (slideIndex) => {\n//         setCurrentIndex(slideIndex);\n//     };\n\n//     return (\n//         <div className=\"slider\">\n//             <div>\n//                 <ArrowCircleLeftIcon onClick={goToPrevious} className=\"left-arrow\"/>\n//                 <ArrowCircleRightIcon onClick={goToNext} className=\"right-arrow\"/>\n//             </div>\n//             <div className='post-image' style={{ maxWidth: largestWidth, maxHeight: largestHeight }}>\n//                 <img\n//                     className=\"image\"\n//                     src={images[currentIndex].props.src}\n//                     alt={`Image ${currentIndex}`}\n//                 />\n//             </div>\n//             <div className=\"dots-container\">\n//                 {images.map((image, imageIndex) => (\n//                 <div\n//                     className=\"dot\"\n//                     key={imageIndex}\n//                     onClick={() => goToSlide(imageIndex)}\n//                 >\n//                     ●\n//                 </div>\n//                 ))}\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default ImageCarousel;\n\nimport React, { useState, useEffect } from 'react';\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport './image-carousel.css';\nimport './files.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCarousel = _ref => {\n  _s();\n  let {\n    images\n  } = _ref;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [largestWidth, setLargestWidth] = useState(0);\n  const [largestHeight, setLargestHeight] = useState(0);\n  useEffect(() => {\n    const imageElements = images.map((img, index) => {\n      const image = new Image();\n      image.src = img.props.src;\n      image.onload = () => {\n        const natWidth = image.naturalWidth;\n        const natHeight = image.naturalHeight;\n        setLargestWidth(prev => Math.max(prev, natWidth));\n        setLargestHeight(prev => Math.max(prev, natHeight));\n        if (index === images.length - 1) {\n          // This is the last image, all images have loaded\n          // Do any additional calculations here\n        }\n      };\n    });\n  }, [images]);\n  const goToPrevious = () => {\n    const isFirstImage = currentIndex === 0;\n    const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\n    setCurrentIndex(newIndex);\n  };\n  const goToNext = () => {\n    const isLastImage = currentIndex === images.length - 1;\n    const newIndex = isLastImage ? 0 : currentIndex + 1;\n    setCurrentIndex(newIndex);\n  };\n  const goToSlide = slideIndex => {\n    setCurrentIndex(slideIndex);\n  };\n  console.log(\"Largest height: \" + largestHeight);\n  console.log(\"Largest width: \" + largestWidth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {\n        onClick: goToPrevious,\n        className: \"left-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowCircleRightIcon, {\n        onClick: goToNext,\n        className: \"right-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-image\",\n      style: {\n        maxWidth: largestWidth,\n        maxHeight: largestHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: images[currentIndex].props.src,\n        alt: `Image ${currentIndex}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots-container\",\n      children: images.map((image, imageIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\",\n        onClick: () => goToSlide(imageIndex),\n        children: \"\\u25CF\"\n      }, imageIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCarousel, \"kPi6kBxpEoxOyo860KEpJ/rnez8=\");\n_c = ImageCarousel;\nexport default ImageCarousel;\nvar _c;\n$RefreshReg$(_c, \"ImageCarousel\");","map":{"version":3,"names":["React","useState","useEffect","ArrowCircleLeftIcon","ArrowCircleRightIcon","jsxDEV","_jsxDEV","ImageCarousel","_ref","_s","images","currentIndex","setCurrentIndex","largestWidth","setLargestWidth","largestHeight","setLargestHeight","imageElements","map","img","index","image","Image","src","props","onload","natWidth","naturalWidth","natHeight","naturalHeight","prev","Math","max","length","goToPrevious","isFirstImage","newIndex","goToNext","isLastImage","goToSlide","slideIndex","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","maxHeight","alt","imageIndex","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/post/image-carousel.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\r\n// import ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\r\n// import './image-carousel.css';\r\n// import './files.css';\r\n\r\n// const ImageCarousel= ({ images }) => {\r\n//     const [currentIndex, setCurrentIndex] = useState(0);\r\n    \r\n//     console.log(\"Testing width is present: \" + images[0].width);\r\n\r\n//     const widths = images.map(img => Number(img.props.width));\r\n//     const heights = images.map(img => Number(img.props.height));\r\n\r\n//     const largestWidth = Math.max(...widths);\r\n//     const largestHeight = Math.max(...heights);\r\n    \r\n//     console.log(\"largest width: \" + largestWidth);\r\n//     console.log(\"largest height: \" + largestHeight);\r\n\r\n//     const goToPrevious = () => {\r\n//         const isFirstImage = currentIndex === 0;\r\n//         const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\r\n//         setCurrentIndex(newIndex);\r\n//     };\r\n\r\n//     const goToNext = () => {\r\n//         const isLastImage = currentIndex === images.length - 1;\r\n//         const newIndex = isLastImage ? 0 : currentIndex + 1;\r\n//         setCurrentIndex(newIndex);\r\n//     };\r\n    \r\n//     const goToSlide = (slideIndex) => {\r\n//         setCurrentIndex(slideIndex);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"slider\">\r\n//             <div>\r\n//                 <ArrowCircleLeftIcon onClick={goToPrevious} className=\"left-arrow\"/>\r\n//                 <ArrowCircleRightIcon onClick={goToNext} className=\"right-arrow\"/>\r\n//             </div>\r\n//             <div className='post-image' style={{ maxWidth: largestWidth, maxHeight: largestHeight }}>\r\n//                 <img\r\n//                     className=\"image\"\r\n//                     src={images[currentIndex].props.src}\r\n//                     alt={`Image ${currentIndex}`}\r\n//                 />\r\n//             </div>\r\n//             <div className=\"dots-container\">\r\n//                 {images.map((image, imageIndex) => (\r\n//                 <div\r\n//                     className=\"dot\"\r\n//                     key={imageIndex}\r\n//                     onClick={() => goToSlide(imageIndex)}\r\n//                 >\r\n//                     ●\r\n//                 </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ImageCarousel;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\r\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\r\nimport './image-carousel.css';\r\nimport './files.css';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [largestWidth, setLargestWidth] = useState(0);\r\n  const [largestHeight, setLargestHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const imageElements = images.map((img, index) => {\r\n      const image = new Image();\r\n      image.src = img.props.src;\r\n      image.onload = () => {\r\n        const natWidth = image.naturalWidth;\r\n        const natHeight = image.naturalHeight;\r\n\r\n        setLargestWidth(prev => Math.max(prev, natWidth));\r\n        setLargestHeight(prev => Math.max(prev, natHeight));\r\n\r\n        if (index === images.length - 1) {\r\n          // This is the last image, all images have loaded\r\n          // Do any additional calculations here\r\n        }\r\n      };\r\n    });\r\n  }, [images]);\r\n\r\n  const goToPrevious = () => {\r\n    const isFirstImage = currentIndex === 0;\r\n    const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\r\n    setCurrentIndex(newIndex);\r\n  };\r\n\r\n  const goToNext = () => {\r\n    const isLastImage = currentIndex === images.length - 1;\r\n    const newIndex = isLastImage ? 0 : currentIndex + 1;\r\n    setCurrentIndex(newIndex);\r\n  };\r\n\r\n  const goToSlide = (slideIndex) => {\r\n    setCurrentIndex(slideIndex);\r\n  };\r\n\r\n  console.log(\"Largest height: \" + largestHeight);\r\n  console.log(\"Largest width: \" + largestWidth);\r\n\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <div>\r\n        <ArrowCircleLeftIcon onClick={goToPrevious} className=\"left-arrow\" />\r\n        <ArrowCircleRightIcon onClick={goToNext} className=\"right-arrow\" />\r\n      </div>\r\n      <div className='post-image' style={{ maxWidth: largestWidth, maxHeight: largestHeight }}>\r\n        <img\r\n          className=\"image\"\r\n          src={images[currentIndex].props.src}\r\n          alt={`Image ${currentIndex}`}\r\n        />\r\n      </div>\r\n      <div className=\"dots-container\">\r\n        {images.map((image, imageIndex) => (\r\n          <div\r\n            className=\"dot\"\r\n            key={imageIndex}\r\n            onClick={() => goToSlide(imageIndex)}\r\n          >\r\n            ●\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}