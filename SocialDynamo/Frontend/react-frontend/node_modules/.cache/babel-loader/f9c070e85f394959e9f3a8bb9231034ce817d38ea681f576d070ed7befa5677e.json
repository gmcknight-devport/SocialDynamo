{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\modals\\\\comments-popup.js\",\n  _s3 = $RefreshSig$();\n// import React, {useState} from 'react'\n// import PropTypes from 'prop-types';\n// import { useUser } from '../hooks/use-user';\n// import UserProfileHeader from './user-profile-header';\n// import CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\n// import SendIcon from '@mui/icons-material/Send';\n// import \"./user-popup.css\"\n\n// export default function CommentsPopup({title, postId, commentData}) {\n//     const [combinedData, setCombinedData] = useState([]);\n//     const [modal, setModal] = useState(false);\n//     const [comment, setComment] = useState({\n//         comment: '',\n//         postedAt: '1900/01/01',\n//         likes: 0\n//     });\n\n//     //Modal logic\n//     const toggleModal = () => {\n//         setModal(!modal)\n//     }\n\n//     if(modal) {\n//         document.body.classList.add('active-modal')\n//     } else {\n//         document.body.classList.remove('active-modal')\n//     }\n\n//     //Load initial comments data\n//     useEffect(() =>{        \n//         const userIds = data.map((commentData) => commentData.authorId);\n\n//         const objMap = { userIds };\n//         const finalBody = JSON.stringify(objMap);\n\n//         //Send data\n//         async function fetchData(){        \n//             const response = await fetch('http://20.49.168.20:80/account/Profiles', {\n//                 method: 'PUT',\n//                 body: finalBody,\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//             });\n\n//             const data = await response.json();\n\n//             //Combine user profile data with comment data\n//             const userLiked = false;\n//             const combined = commentData.map((item, index) => ({\n//                 userid: item.authorId,\n//                 name: data[index].forename + ' ' + data[index].surname,\n//                 profilePictureBlob: data[index].profilePictureBlob,\n//                 comment: item.commentText,\n//                 postedAt: item.postedAt,\n//                 likes: item.Likes ? item.Likes.length : 0,\n//                 hasUserLiked: userLiked\n//             }));\n\n//             setCombinedData(combined);\n//         }\n//     })\n\n//     const handleInputChange = (e) => {\n//         setComment(e.target.value);\n//     };\n\n//     //Handle submitting comment\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         console.log(\"Called API method\")\n\n//         // const storedUser = localStorage.getItem('user');\n//         // setAuthorId = JSON.parse(storedUser);\n\n//         // const objMap = { postId, authorId, comment };\n//         // const finalBody = JSON.stringify(objMap);\n\n//         // //Send data\n//         // const response = await fetch('http://20.49.168.20:80/posts/comment', {\n//         //     method: 'PUT',\n//         //     body: finalBody,\n//         //     headers: {\n//         //         'Content-Type': 'application/json',\n//         //     },\n//         // });\n\n//         //Update data displayed\n//         const { userId, name, profilePicture } = useContext(useUser);\n//         const newData = {\n//             userid: userId,\n//             name: name,\n//             profilePictureBlob: profilePicture,\n//             comment: item.commentText,\n//             postedAt: item.postedAt,\n//             likes: 0\n//         };\n\n//         //Handle like comment\n//         const handleLikeComment = async (event) => {\n//             event.preventDefault();\n\n//             //If user already likes comment - unlike\n//             //else like comment\n//             //Update current likes outside if statement\n//         }\n\n//         setCombinedData(prevData => [...prevData, ...newData]);\n//       };\n\n//   return (\n//     <>\n//       <button onClick={toggleModal} className=\"btn-modal\">\n//         Open\n//       </button>\n\n//       {modal && (\n//         <div className=\"modal\">\n//           <div onClick={toggleModal} className=\"overlay\"></div>\n//             <div className=\"modal-content\">\n//                 <h1>{title}</h1>               \n//                 {/* Map data array to UserProfileHeader components */}\n//                 {combinedData.map((data, index) => {\n//                     return (\n//                         <div key={index}>\n//                             <UserProfileHeader                            \n//                                 profilepictureblob={data.profilePictureBlob}\n//                                 name={data.name}\n//                                 userid={data.userid}\n//                             />\n//                             {/* Render the comment information */}\n//                             <div className='comment-body'>{commentData.comment}</div>\n//                             <div className='comment-footer'>\n//                                 {commentData.likes} likes\n//                                 {commentData.postedAt}  \n//                                 <favoriteBorderIcon onClick={}/>                              \n//                             </div>\n//                         </div>\n//                     );\n//                 })}\n\n//                 <div className='modal-footer'>\n//                     <input\n//                         type=\"text\"\n//                         value={comment}\n//                         onChange={handleInputChange}\n//                         placeholder=\"Enter a comment\"\n//                     />                    \n//                     <button className=\"submit-modal\" onClick={handleSubmit}>\n//                         <SendIcon className='sendIcon'/>\n//                     </button>\n//                 </div>\n//                 <button className=\"close-modal\" onClick={toggleModal}>\n//                     <CancelOutlinedIcon className='closeIcon'/>\n//                 </button>\n//             </div>\n//         </div>\n//       )}      \n//     </>\n//   )\n// }\n\n// UserPopup.propTypes = {\n//     title: PropTypes.string.isRequired,\n//     data: PropTypes.arrayOf(PropTypes.shape({\n//         profilePictureBlob: PropTypes.arrayBuffer, // Enforce profilePictureBlob as an ArrayBuffer\n//         name: PropTypes.string.isRequired, // Enforce that name is a string and is required\n//         userid: PropTypes.string.isRequired,\n//     })).isRequired,\n// };\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useUser } from '../../hooks/use-user';\nimport Comment from '../post/comment';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport SendIcon from '@mui/icons-material/Send';\nimport \"./user-popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentsPopup(_ref) {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  let {\n    title,\n    postId,\n    commentData\n  } = _ref;\n  const [combinedData, setCombinedData] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [comment, setComment] = useState({\n    comment: '',\n    postedAt: '1900/01/01',\n    likes: 0\n  });\n\n  //Modal logic\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n  if (modal) {\n    document.body.classList.add('active-modal');\n  } else {\n    document.body.classList.remove('active-modal');\n  }\n\n  //Load initial comments data\n  _s(useEffect(_s(async () => {\n    _s();\n    const userIds = commentData.map(comment => comment.authorId);\n    const objMap = {\n      userIds\n    };\n    const finalBody = JSON.stringify(objMap);\n\n    //Send data\n\n    // const response = await fetch('http://20.49.168.20:80/account/Profiles', {\n    //     method: 'PUT',\n    //     body: finalBody,\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    // });\n\n    // const data = await response.json();\n\n    const data = [{\n      profilePictureBlob: null,\n      forename: 'User 1',\n      surname: 'User1Surname',\n      userid: 'user1'\n    }, {\n      profilePictureBlob: null,\n      forename: 'User 2',\n      surname: 'User2Surname',\n      userid: 'user2'\n    }, {\n      profilePictureBlob: null,\n      forename: 'User 3',\n      surname: 'User3Surname',\n      userid: 'user3'\n    }, {\n      profilePictureBlob: null,\n      forename: 'User 4',\n      surname: 'User4Surname',\n      userid: 'user4'\n    }, {\n      profilePictureBlob: null,\n      forename: 'User 5',\n      surname: 'User5Surname',\n      userid: 'user5'\n    }];\n\n    //Combine user profile data with comment data\n    const {\n      userId\n    } = useContext(useUser);\n    const userLiked = commentData.likes && commentData.likes.some(like => like.userId === userId);\n    const combined = commentData.map((item, index) => ({\n      userId: item.authorId,\n      name: data[index].forename + ' ' + data[index].surname,\n      profilePictureBlob: data[index].profilePictureBlob,\n      commentId: item.commentId,\n      comment: item.comment,\n      postedAt: item.postedAt,\n      likes: item.likes ? item.likes.length : 0,\n      hasUserLiked: userLiked\n    }));\n    setCombinedData(combined);\n  }, \"f1xc73H04AOIcBBBtmriXwWn3kM=\")), \"f1xc73H04AOIcBBBtmriXwWn3kM=\");\n  const handleInputChange = e => {\n    setComment(e.target.value);\n  };\n\n  //Handle submitting comment\n  const handleSubmit = async event => {\n    _s2();\n    event.preventDefault();\n    console.log(\"Called API method\");\n\n    // const storedUser = localStorage.getItem('user');\n    // setAuthorId = JSON.parse(storedUser);\n\n    // const objMap = { postId, authorId, comment };\n    // const finalBody = JSON.stringify(objMap);\n\n    // //Send data\n    // const response = await fetch('http://20.49.168.20:80/posts/comment', {\n    //     method: 'PUT',\n    //     body: finalBody,\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    // });\n\n    //Update data displayed\n    const {\n      userId,\n      name,\n      profilePicture\n    } = useContext(useUser);\n    const newData = {\n      userid: userId,\n      name: name,\n      profilePictureBlob: profilePicture,\n      comment: item.commentText,\n      postedAt: item.postedAt,\n      likes: 0,\n      hasUserLiked: false\n    };\n    setCombinedData(prevData => [...prevData, ...newData]);\n  };\n  _s2(handleSubmit, \"jYGoc3XPAs2kr8yRdXTIHJK6ycI=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleModal,\n      className: \"btn-modal\",\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }, this), combinedData.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(Comment, {\n            data: data\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: comment,\n            onChange: handleInputChange,\n            placeholder: \"Enter a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-modal\",\n            onClick: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {\n              className: \"sendIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {\n            className: \"closeIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s3(CommentsPopup, \"gkFyLwuIm2kgS98cpEqvlMmFg7M=\");\n_c = CommentsPopup;\nvar _c;\n$RefreshReg$(_c, \"CommentsPopup\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useUser","Comment","CancelOutlinedIcon","SendIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsPopup","_ref","_s3","_s","$RefreshSig$","_s2","title","postId","commentData","combinedData","setCombinedData","modal","setModal","comment","setComment","postedAt","likes","toggleModal","document","body","classList","add","remove","userIds","map","authorId","objMap","finalBody","JSON","stringify","data","profilePictureBlob","forename","surname","userid","userId","userLiked","some","like","combined","item","index","name","commentId","length","hasUserLiked","handleInputChange","e","target","value","handleSubmit","event","preventDefault","console","log","profilePicture","newData","commentText","prevData","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/modals/comments-popup.js"],"sourcesContent":["// import React, {useState} from 'react'\r\n// import PropTypes from 'prop-types';\r\n// import { useUser } from '../hooks/use-user';\r\n// import UserProfileHeader from './user-profile-header';\r\n// import CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n// import SendIcon from '@mui/icons-material/Send';\r\n// import \"./user-popup.css\"\r\n\r\n// export default function CommentsPopup({title, postId, commentData}) {\r\n//     const [combinedData, setCombinedData] = useState([]);\r\n//     const [modal, setModal] = useState(false);\r\n//     const [comment, setComment] = useState({\r\n//         comment: '',\r\n//         postedAt: '1900/01/01',\r\n//         likes: 0\r\n//     });\r\n\r\n//     //Modal logic\r\n//     const toggleModal = () => {\r\n//         setModal(!modal)\r\n//     }\r\n\r\n//     if(modal) {\r\n//         document.body.classList.add('active-modal')\r\n//     } else {\r\n//         document.body.classList.remove('active-modal')\r\n//     }\r\n\r\n//     //Load initial comments data\r\n//     useEffect(() =>{        \r\n//         const userIds = data.map((commentData) => commentData.authorId);\r\n        \r\n//         const objMap = { userIds };\r\n//         const finalBody = JSON.stringify(objMap);\r\n\r\n//         //Send data\r\n//         async function fetchData(){        \r\n//             const response = await fetch('http://20.49.168.20:80/account/Profiles', {\r\n//                 method: 'PUT',\r\n//                 body: finalBody,\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             });\r\n\r\n//             const data = await response.json();\r\n\r\n//             //Combine user profile data with comment data\r\n//             const userLiked = false;\r\n//             const combined = commentData.map((item, index) => ({\r\n//                 userid: item.authorId,\r\n//                 name: data[index].forename + ' ' + data[index].surname,\r\n//                 profilePictureBlob: data[index].profilePictureBlob,\r\n//                 comment: item.commentText,\r\n//                 postedAt: item.postedAt,\r\n//                 likes: item.Likes ? item.Likes.length : 0,\r\n//                 hasUserLiked: userLiked\r\n//             }));\r\n            \r\n//             setCombinedData(combined);\r\n//         }\r\n//     })\r\n\r\n\r\n//     const handleInputChange = (e) => {\r\n//         setComment(e.target.value);\r\n//     };\r\n\r\n//     //Handle submitting comment\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n\r\n        \r\n\r\n//         console.log(\"Called API method\")\r\n\r\n//         // const storedUser = localStorage.getItem('user');\r\n//         // setAuthorId = JSON.parse(storedUser);\r\n\r\n//         // const objMap = { postId, authorId, comment };\r\n//         // const finalBody = JSON.stringify(objMap);\r\n\r\n//         // //Send data\r\n//         // const response = await fetch('http://20.49.168.20:80/posts/comment', {\r\n//         //     method: 'PUT',\r\n//         //     body: finalBody,\r\n//         //     headers: {\r\n//         //         'Content-Type': 'application/json',\r\n//         //     },\r\n//         // });\r\n\r\n//         //Update data displayed\r\n//         const { userId, name, profilePicture } = useContext(useUser);\r\n//         const newData = {\r\n//             userid: userId,\r\n//             name: name,\r\n//             profilePictureBlob: profilePicture,\r\n//             comment: item.commentText,\r\n//             postedAt: item.postedAt,\r\n//             likes: 0\r\n//         };\r\n\r\n//         //Handle like comment\r\n//         const handleLikeComment = async (event) => {\r\n//             event.preventDefault();\r\n\r\n//             //If user already likes comment - unlike\r\n//             //else like comment\r\n//             //Update current likes outside if statement\r\n//         }\r\n\r\n//         setCombinedData(prevData => [...prevData, ...newData]);\r\n//       };\r\n \r\n//   return (\r\n//     <>\r\n//       <button onClick={toggleModal} className=\"btn-modal\">\r\n//         Open\r\n//       </button>\r\n\r\n//       {modal && (\r\n//         <div className=\"modal\">\r\n//           <div onClick={toggleModal} className=\"overlay\"></div>\r\n//             <div className=\"modal-content\">\r\n//                 <h1>{title}</h1>               \r\n//                 {/* Map data array to UserProfileHeader components */}\r\n//                 {combinedData.map((data, index) => {\r\n//                     return (\r\n//                         <div key={index}>\r\n//                             <UserProfileHeader                            \r\n//                                 profilepictureblob={data.profilePictureBlob}\r\n//                                 name={data.name}\r\n//                                 userid={data.userid}\r\n//                             />\r\n//                             {/* Render the comment information */}\r\n//                             <div className='comment-body'>{commentData.comment}</div>\r\n//                             <div className='comment-footer'>\r\n//                                 {commentData.likes} likes\r\n//                                 {commentData.postedAt}  \r\n//                                 <favoriteBorderIcon onClick={}/>                              \r\n//                             </div>\r\n//                         </div>\r\n//                     );\r\n//                 })}\r\n\r\n//                 <div className='modal-footer'>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={comment}\r\n//                         onChange={handleInputChange}\r\n//                         placeholder=\"Enter a comment\"\r\n//                     />                    \r\n//                     <button className=\"submit-modal\" onClick={handleSubmit}>\r\n//                         <SendIcon className='sendIcon'/>\r\n//                     </button>\r\n//                 </div>\r\n//                 <button className=\"close-modal\" onClick={toggleModal}>\r\n//                     <CancelOutlinedIcon className='closeIcon'/>\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//       )}      \r\n//     </>\r\n//   )\r\n// }\r\n\r\n// UserPopup.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n//     data: PropTypes.arrayOf(PropTypes.shape({\r\n//         profilePictureBlob: PropTypes.arrayBuffer, // Enforce profilePictureBlob as an ArrayBuffer\r\n//         name: PropTypes.string.isRequired, // Enforce that name is a string and is required\r\n//         userid: PropTypes.string.isRequired,\r\n//     })).isRequired,\r\n// };\r\n\r\nimport React, {useState, useContext, useEffect } from 'react'\r\nimport { useUser } from '../../hooks/use-user';\r\nimport Comment from '../post/comment';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport \"./user-popup.css\"\r\n\r\nexport default function CommentsPopup({title, postId, commentData}) {\r\n    const [combinedData, setCombinedData] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [comment, setComment] = useState({\r\n        comment: '',\r\n        postedAt: '1900/01/01',\r\n        likes: 0\r\n    });\r\n\r\n    //Modal logic\r\n    const toggleModal = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    if(modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n\r\n    //Load initial comments data\r\n    useEffect(async() =>{        \r\n        const userIds = commentData.map((comment) => comment.authorId);\r\n        \r\n        const objMap = { userIds };\r\n        const finalBody = JSON.stringify(objMap);\r\n\r\n        //Send data\r\n              \r\n        // const response = await fetch('http://20.49.168.20:80/account/Profiles', {\r\n        //     method: 'PUT',\r\n        //     body: finalBody,\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //     },\r\n        // });\r\n\r\n        // const data = await response.json();\r\n\r\n        const data = [\r\n            {\r\n                profilePictureBlob: null,\r\n                forename: 'User 1',\r\n                surname: 'User1Surname',\r\n                userid: 'user1',\r\n            },\r\n            \r\n            {\r\n                profilePictureBlob: null,\r\n                forename: 'User 2',\r\n                surname: 'User2Surname',\r\n                userid: 'user2',\r\n            },\r\n            \r\n            {\r\n                profilePictureBlob: null,\r\n                forename: 'User 3',\r\n                surname: 'User3Surname',\r\n                userid: 'user3',\r\n            },\r\n            \r\n            {\r\n                profilePictureBlob: null,\r\n                forename: 'User 4',\r\n                surname: 'User4Surname',\r\n                userid: 'user4',\r\n            },\r\n            \r\n            {\r\n                profilePictureBlob: null,\r\n                forename: 'User 5',\r\n                surname: 'User5Surname',\r\n                userid: 'user5',\r\n            }\r\n        ];\r\n\r\n        //Combine user profile data with comment data\r\n        const { userId } = useContext(useUser);\r\n        const userLiked = commentData.likes && commentData.likes.some(like => like.userId === userId);\r\n        const combined = commentData.map((item, index) => ({\r\n            userId: item.authorId,\r\n            name: data[index].forename + ' ' + data[index].surname,\r\n            profilePictureBlob: data[index].profilePictureBlob,\r\n            commentId: item.commentId,\r\n            comment: item.comment,\r\n            postedAt: item.postedAt,\r\n            likes: item.likes ? item.likes.length : 0,\r\n            hasUserLiked: userLiked\r\n        }));\r\n        \r\n        setCombinedData(combined);\r\n    })\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setComment(e.target.value);\r\n    };\r\n\r\n    //Handle submitting comment\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        \r\n\r\n        console.log(\"Called API method\")\r\n\r\n        // const storedUser = localStorage.getItem('user');\r\n        // setAuthorId = JSON.parse(storedUser);\r\n\r\n        // const objMap = { postId, authorId, comment };\r\n        // const finalBody = JSON.stringify(objMap);\r\n\r\n        // //Send data\r\n        // const response = await fetch('http://20.49.168.20:80/posts/comment', {\r\n        //     method: 'PUT',\r\n        //     body: finalBody,\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //     },\r\n        // });\r\n\r\n        //Update data displayed\r\n        const { userId, name, profilePicture } = useContext(useUser);\r\n        const newData = {\r\n            userid: userId,\r\n            name: name,\r\n            profilePictureBlob: profilePicture,\r\n            comment: item.commentText,\r\n            postedAt: item.postedAt,\r\n            likes: 0,\r\n            hasUserLiked: false\r\n        };\r\n       \r\n        setCombinedData(prevData => [...prevData, ...newData]);\r\n      };\r\n \r\n  return (\r\n    <>\r\n      <button onClick={toggleModal} className=\"btn-modal\">\r\n        Open\r\n      </button>\r\n\r\n      {modal && (\r\n        <div className=\"modal\">\r\n          <div onClick={toggleModal} className=\"overlay\"></div>\r\n            <div className=\"modal-content\">\r\n                <h1>{title}</h1>                               \r\n                {combinedData.map((data, index) => {\r\n                    return (\r\n                        <Comment key={index} data={data} />\r\n                    );\r\n                })}\r\n\r\n                <div className='modal-footer'>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={comment}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter a comment\"\r\n                    />                    \r\n                    <button className=\"submit-modal\" onClick={handleSubmit}>\r\n                        <SendIcon className='sendIcon'/>\r\n                    </button>\r\n                </div>\r\n                <button className=\"close-modal\" onClick={toggleModal}>\r\n                    <CancelOutlinedIcon className='closeIcon'/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n      )}      \r\n    </>\r\n  )\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7D,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA+B;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EAAA,IAA9B;IAACE,KAAK;IAAEC,MAAM;IAAEC;EAAW,CAAC,GAAAP,IAAA;EAC9D,MAAM,CAACQ,YAAY,EAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}