{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\post\\\\image-carousel.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\n// import ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\n// import './image-carousel.css';\n// import './files.css';\n\n// const ImageCarousel= ({ images }) => {\n//     const [currentIndex, setCurrentIndex] = useState(0);\n//     const largestWidth = Math.max(...images.map(image => image.props.width));\n//     const largestHeight = Math.max(...images.map(image => image.props.height));\n\n//     console.log(\"largest width: \" + largestWidth);\n//     console.log(\"largest height: \" + largestHeight);\n\n//     const goToPrevious = () => {\n//         const isFirstImage = currentIndex === 0;\n//         const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\n//         setCurrentIndex(newIndex);\n//     };\n\n//     const goToNext = () => {\n//         const isLastImage = currentIndex === images.length - 1;\n//         const newIndex = isLastImage ? 0 : currentIndex + 1;\n//         setCurrentIndex(newIndex);\n//     };\n\n//     const goToSlide = (slideIndex) => {\n//         setCurrentIndex(slideIndex);\n//     };\n\n//     return (\n//         <div className=\"slider\">\n//             <div>\n//                 <ArrowCircleLeftIcon onClick={goToPrevious} className=\"left-arrow\"/>\n//                 <ArrowCircleRightIcon onClick={goToNext} className=\"right-arrow\"/>\n//             </div>\n//             <div className='post-image' style={{ maxWidth: largestWidth, maxHeight: largestHeight }}>\n//                 <img\n//                     className=\"image\"\n//                     src={images[currentIndex].props.src}\n//                     alt={`Image ${currentIndex}`}\n//                 />\n//             </div>\n//             <div className=\"dots-container\">\n//                 {images.map((image, imageIndex) => (\n//                 <div\n//                     className=\"dot\"\n//                     key={imageIndex}\n//                     onClick={() => goToSlide(imageIndex)}\n//                 >\n//                     ●\n//                 </div>\n//                 ))}\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default ImageCarousel;\n\nimport React, { useState } from 'react';\nimport Gallery from 'react-images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCarousel = _ref => {\n  _s();\n  let {\n    images\n  } = _ref;\n  const [currentImage, setCurrentImage] = useState(0);\n  const [lightboxIsOpen, setLightboxIsOpen] = useState(false);\n  const openLightbox = index => {\n    setCurrentImage(index);\n    setLightboxIsOpen(true);\n  };\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setLightboxIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.props.src,\n      onClick: () => openLightbox(index),\n      className: \"image\",\n      alt: `Image ${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Gallery, {\n      images: images.map(image => ({\n        src: image.props.src\n      })),\n      currentIndex: currentImage,\n      isOpen: lightboxIsOpen,\n      onClose: closeLightbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_s(ImageCarousel, \"c/IpJqhzKhTOq2fgaS7jgfuPI6g=\");\n_c = ImageCarousel;\nexport default ImageCarousel;\nvar _c;\n$RefreshReg$(_c, \"ImageCarousel\");","map":{"version":3,"names":["React","useState","Gallery","jsxDEV","_jsxDEV","ImageCarousel","_ref","_s","images","currentImage","setCurrentImage","lightboxIsOpen","setLightboxIsOpen","openLightbox","index","closeLightbox","children","map","image","src","props","onClick","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","currentIndex","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/post/image-carousel.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\r\n// import ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\r\n// import './image-carousel.css';\r\n// import './files.css';\r\n\r\n// const ImageCarousel= ({ images }) => {\r\n//     const [currentIndex, setCurrentIndex] = useState(0);\r\n//     const largestWidth = Math.max(...images.map(image => image.props.width));\r\n//     const largestHeight = Math.max(...images.map(image => image.props.height));\r\n\r\n//     console.log(\"largest width: \" + largestWidth);\r\n//     console.log(\"largest height: \" + largestHeight);\r\n\r\n//     const goToPrevious = () => {\r\n//         const isFirstImage = currentIndex === 0;\r\n//         const newIndex = isFirstImage ? images.length - 1 : currentIndex - 1;\r\n//         setCurrentIndex(newIndex);\r\n//     };\r\n\r\n//     const goToNext = () => {\r\n//         const isLastImage = currentIndex === images.length - 1;\r\n//         const newIndex = isLastImage ? 0 : currentIndex + 1;\r\n//         setCurrentIndex(newIndex);\r\n//     };\r\n    \r\n//     const goToSlide = (slideIndex) => {\r\n//         setCurrentIndex(slideIndex);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"slider\">\r\n//             <div>\r\n//                 <ArrowCircleLeftIcon onClick={goToPrevious} className=\"left-arrow\"/>\r\n//                 <ArrowCircleRightIcon onClick={goToNext} className=\"right-arrow\"/>\r\n//             </div>\r\n//             <div className='post-image' style={{ maxWidth: largestWidth, maxHeight: largestHeight }}>\r\n//                 <img\r\n//                     className=\"image\"\r\n//                     src={images[currentIndex].props.src}\r\n//                     alt={`Image ${currentIndex}`}\r\n//                 />\r\n//             </div>\r\n//             <div className=\"dots-container\">\r\n//                 {images.map((image, imageIndex) => (\r\n//                 <div\r\n//                     className=\"dot\"\r\n//                     key={imageIndex}\r\n//                     onClick={() => goToSlide(imageIndex)}\r\n//                 >\r\n//                     ●\r\n//                 </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ImageCarousel;\r\n\r\nimport React, { useState } from 'react';\r\nimport Gallery from 'react-images';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const [lightboxIsOpen, setLightboxIsOpen] = useState(false);\r\n    \r\n    const openLightbox = (index) => {\r\n      setCurrentImage(index);\r\n      setLightboxIsOpen(true);\r\n    }\r\n  \r\n    const closeLightbox = () => {\r\n      setCurrentImage(0);\r\n      setLightboxIsOpen(false);\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {images.map((image, index) => (\r\n          <img\r\n            key={index}\r\n            src={image.props.src}\r\n            onClick={() => openLightbox(index)}\r\n            className=\"image\"\r\n            alt={`Image ${index}`}\r\n          />\r\n        ))}\r\n        <Gallery\r\n          images={images.map(image => ({ src: image.props.src }))}\r\n          currentIndex={currentImage}\r\n          isOpen={lightboxIsOpen}\r\n          onClose={closeLightbox}\r\n        />\r\n      </div>\r\n    );\r\n  };  \r\n  \r\nexport default ImageCarousel;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC7B,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,eAAe,CAACI,KAAK,CAAC;IACtBF,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BL,eAAe,CAAC,CAAC,CAAC;IAClBE,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA;IAAAY,QAAA,GACGR,MAAM,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEJ,KAAK,kBACvBV,OAAA;MAEEe,GAAG,EAAED,KAAK,CAACE,KAAK,CAACD,GAAI;MACrBE,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAACC,KAAK,CAAE;MACnCQ,SAAS,EAAC,OAAO;MACjBC,GAAG,EAAG,SAAQT,KAAM;IAAE,GAJjBA,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC,eACFvB,OAAA,CAACF,OAAO;MACNM,MAAM,EAAEA,MAAM,CAACS,GAAG,CAACC,KAAK,KAAK;QAAEC,GAAG,EAAED,KAAK,CAACE,KAAK,CAACD;MAAI,CAAC,CAAC,CAAE;MACxDS,YAAY,EAAEnB,YAAa;MAC3BoB,MAAM,EAAElB,cAAe;MACvBmB,OAAO,EAAEf;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCEF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}