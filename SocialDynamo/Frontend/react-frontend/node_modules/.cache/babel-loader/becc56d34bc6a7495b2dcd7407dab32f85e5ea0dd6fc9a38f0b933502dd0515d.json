{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import { useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import Header from '../components/header';\n// import Timeline from '../components/timeline';\n// import Sidebar from '../components/sidebar';\n// import useUser from '../hooks/use-user';\n// import LoggedInUserContext from '../context/logged-in-user';\n\n// export default function Dashboard({ user: loggedInUser }) {\n//   const { user, setActiveUser } = useUser(loggedInUser.uid);\n//   useEffect(() => {\n//     document.title = 'Instagram';\n//   }, []);\n\n//   return (\n//     <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\n//       <div className=\"bg-gray-background\">\n//         <Header />\n//         <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n//           <Timeline />\n//           <Sidebar />\n//         </div>\n//       </div>\n//     </LoggedInUserContext.Provider>\n//   );\n// }\n\n// Dashboard.propTypes = {\n//   user: PropTypes.object.isRequired\n// };\nimport React, { useState, useEffect, useRef } from 'react';\nimport InfiniteScroll from '../components/infinitescroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 5; // Number of items per page\n\nconst generateRandomData = count => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    const item = {\n      id: i + 1,\n      // Assuming IDs start from 1\n      name: `Item ${i + 1}`,\n      description: `Description for Item ${i + 1}`\n    };\n    data.push(item);\n  }\n  return data;\n};\nconst TestPage = () => {\n  _s();\n  // Simulated in-memory paginated dataset\n  const [mockData, setMockData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const containerRef = useRef(); // Ref for the scroll container\n\n  // Function to generate random data for a given page number\n  const generatePageData = page => {\n    setLoading(true);\n    setError(null);\n\n    // Simulate API call delay\n    setTimeout(() => {\n      const startIndex = (page - 1) * PAGE_SIZE;\n      const endIndex = startIndex + PAGE_SIZE;\n      const newData = generateRandomData(PAGE_SIZE).map((item, index) => ({\n        ...item,\n        id: startIndex + index + 1\n      }));\n      setMockData(prevData => [...prevData, ...newData]);\n      setCurrentPage(prevPage => prevPage + 1);\n      setLoading(false);\n    }, 1000); // Simulate API call delay of 1 second\n  };\n\n  // Function to handle the scroll event on the container element\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = container;\n      if (scrollTop + clientHeight >= scrollHeight - 50 && !loading) {\n        // Load more data when the user has scrolled near the bottom and not already loading\n        generatePageData(currentPage);\n      }\n    }\n  };\n\n  // Add the scroll event listener when the component mounts\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n    }\n\n    // Remove the scroll event listener when the component unmounts\n    return () => {\n      if (container) {\n        container.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [loading, currentPage]); // Add 'loading' and 'currentPage' as dependencies to prevent unnecessary event listener changes\n\n  // Load initial data when the component mounts\n  useEffect(() => {\n    generatePageData(1);\n\n    // Load more data if the initial data doesn't fill the viewport\n    const container = containerRef.current;\n    if (container && container.scrollHeight <= container.clientHeight) {\n      generatePageData(2);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      overflowY: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        height: 'calc(100vh - 30px)',\n        overflowY: 'scroll'\n      },\n      children: mockData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log('Item clicked:', item),\n          children: \"Click Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"lw2FUg7Pg8XoYFWTbyrXMl3dSc8=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","InfiniteScroll","jsxDEV","_jsxDEV","PAGE_SIZE","generateRandomData","count","data","i","item","id","name","description","push","TestPage","_s","mockData","setMockData","loading","setLoading","error","setError","currentPage","setCurrentPage","containerRef","generatePageData","page","setTimeout","startIndex","endIndex","newData","map","index","prevData","prevPage","handleScroll","container","current","scrollTop","scrollHeight","clientHeight","addEventListener","removeEventListener","style","height","overflowY","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","console","log","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/dashboard.js"],"sourcesContent":["// import { useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import Header from '../components/header';\n// import Timeline from '../components/timeline';\n// import Sidebar from '../components/sidebar';\n// import useUser from '../hooks/use-user';\n// import LoggedInUserContext from '../context/logged-in-user';\n\n// export default function Dashboard({ user: loggedInUser }) {\n//   const { user, setActiveUser } = useUser(loggedInUser.uid);\n//   useEffect(() => {\n//     document.title = 'Instagram';\n//   }, []);\n\n//   return (\n//     <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\n//       <div className=\"bg-gray-background\">\n//         <Header />\n//         <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n//           <Timeline />\n//           <Sidebar />\n//         </div>\n//       </div>\n//     </LoggedInUserContext.Provider>\n//   );\n// }\n\n// Dashboard.propTypes = {\n//   user: PropTypes.object.isRequired\n// };\nimport React, { useState, useEffect, useRef } from 'react';\nimport InfiniteScroll from '../components/infinitescroll';\n\nconst PAGE_SIZE = 5; // Number of items per page\n\nconst generateRandomData = (count) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    const item = {\n      id: i + 1, // Assuming IDs start from 1\n      name: `Item ${i + 1}`,\n      description: `Description for Item ${i + 1}`,\n    };\n    data.push(item);\n  }\n  return data;\n};\n\nconst TestPage = () => {\n  // Simulated in-memory paginated dataset\n  const [mockData, setMockData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const containerRef = useRef(); // Ref for the scroll container\n\n  // Function to generate random data for a given page number\n  const generatePageData = (page) => {\n    setLoading(true);\n    setError(null);\n\n    // Simulate API call delay\n    setTimeout(() => {\n      const startIndex = (page - 1) * PAGE_SIZE;\n      const endIndex = startIndex + PAGE_SIZE;\n      const newData = generateRandomData(PAGE_SIZE).map((item, index) => ({\n        ...item,\n        id: startIndex + index + 1,\n      }));\n\n      setMockData((prevData) => [...prevData, ...newData]);\n      setCurrentPage((prevPage) => prevPage + 1);\n      setLoading(false);\n    }, 1000); // Simulate API call delay of 1 second\n  };\n\n  // Function to handle the scroll event on the container element\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container) {\n      const { scrollTop, scrollHeight, clientHeight } = container;\n      if (scrollTop + clientHeight >= scrollHeight - 50 && !loading) {\n        // Load more data when the user has scrolled near the bottom and not already loading\n        generatePageData(currentPage);\n      }\n    }\n  };\n\n  // Add the scroll event listener when the component mounts\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n    }\n\n    // Remove the scroll event listener when the component unmounts\n    return () => {\n      if (container) {\n        container.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [loading, currentPage]); // Add 'loading' and 'currentPage' as dependencies to prevent unnecessary event listener changes\n\n  // Load initial data when the component mounts\n  useEffect(() => {\n    generatePageData(1);\n\n    // Load more data if the initial data doesn't fill the viewport\n    const container = containerRef.current;\n    if (container && container.scrollHeight <= container.clientHeight) {\n      generatePageData(2);\n    }\n  }, []);\n\n  return (\n    <div style={{ height: '100vh', overflowY: 'hidden' }}>\n      <h1>Test Page</h1>\n      <div ref={containerRef} style={{ height: 'calc(100vh - 30px)', overflowY: 'scroll' }}>\n        {mockData.map((item) => (\n          <div key={item.id}>\n            <p>{item.name}</p>\n            <p>{item.description}</p>\n            {/* Customize the rendering and interactions for each item */}\n            <button onClick={() => console.log('Item clicked:', item)}>Click Me</button>\n          </div>\n        ))}\n      </div>\n      {loading && <p>Loading...</p>}\n    </div>\n  );\n};\n\nexport default TestPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}