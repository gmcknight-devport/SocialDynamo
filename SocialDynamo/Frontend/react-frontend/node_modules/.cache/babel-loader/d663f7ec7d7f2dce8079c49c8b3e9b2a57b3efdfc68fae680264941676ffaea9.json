{"ast":null,"code":"// const BlobToImage = (props) => {\n//   const { byteArray } = props;\n//   let images = [];\n\n//   //Check if blobData is null or undefined\n//   if (byteArray === null || byteArray === undefined) {\n//     return null;\n//   }\n\n//   if (Array.isArray(byteArray)) {\n//     images = byteArray.map((byteData, index) => {\n//       const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\n//       const imageUrl = URL.createObjectURL(blob);\n\n//       // return <img key={index} src={imageUrl} alt={`Image ${index}`} />;   \n//       return { original: imageUrl, thumbnail: imageUrl, height: img.naturalHeight };    \n//     });\n//   } else {\n//     const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\n//     const imageUrl = URL.createObjectURL(blob);\n//     //images.push(<img key={0} src={imageUrl} alt=\"Image\" />);\n\n//     // Use an Image object to get the natural height\n//     const img = new Image();\n//     img.src = imageUrl;\n\n//     images.push({\n//       original: imageUrl,\n//       thumbnail: imageUrl,\n//       height: img.naturalHeight\n//     });\n//   }  \n//   return images;\n// }\n\n// export default BlobToImage;","map":{"version":3,"names":[],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/blob-to-image.js"],"sourcesContent":["// const BlobToImage = (props) => {\r\n//   const { byteArray } = props;\r\n//   let images = [];\r\n\r\n//   //Check if blobData is null or undefined\r\n//   if (byteArray === null || byteArray === undefined) {\r\n//     return null;\r\n//   }\r\n\r\n//   if (Array.isArray(byteArray)) {\r\n//     images = byteArray.map((byteData, index) => {\r\n//       const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\r\n//       const imageUrl = URL.createObjectURL(blob);\r\n\r\n//       // return <img key={index} src={imageUrl} alt={`Image ${index}`} />;   \r\n//       return { original: imageUrl, thumbnail: imageUrl, height: img.naturalHeight };    \r\n//     });\r\n//   } else {\r\n//     const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\r\n//     const imageUrl = URL.createObjectURL(blob);\r\n//     //images.push(<img key={0} src={imageUrl} alt=\"Image\" />);\r\n\r\n//     // Use an Image object to get the natural height\r\n//     const img = new Image();\r\n//     img.src = imageUrl;\r\n\r\n//     images.push({\r\n//       original: imageUrl,\r\n//       thumbnail: imageUrl,\r\n//       height: img.naturalHeight\r\n//     });\r\n//   }  \r\n//   return images;\r\n// }\r\n\r\n// export default BlobToImage;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}