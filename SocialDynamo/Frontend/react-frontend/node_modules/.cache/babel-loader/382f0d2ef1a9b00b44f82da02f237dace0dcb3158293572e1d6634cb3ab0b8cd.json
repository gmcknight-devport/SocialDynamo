{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\util\\\\blob-to-image.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlobToImage = props => {\n  // Check if blobData is null or undefined\n  if (props === null || props === undefined) {\n    return null;\n  }\n  const {\n    byteArray\n  } = props;\n  if (byteArray.length > 1) {\n    // Handle a collection of binary blobs\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: byteArray.map((byteData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${btoa(String.fromCharCode(...byteData))}`,\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else if (byteArray.length === 1) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${btoa(String.fromCharCode(...byteArray[0]))}`,\n      alt: \"Image couldn't be found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c = BlobToImage;\nexport default BlobToImage;\nvar _c;\n$RefreshReg$(_c, \"BlobToImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BlobToImage","props","undefined","byteArray","length","children","map","byteData","index","src","btoa","String","fromCharCode","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/blob-to-image.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst BlobToImage = (props) => {\r\n\r\n  // Check if blobData is null or undefined\r\n  if (props === null || props === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const { byteArray } = props;\r\n\r\n  if (byteArray.length > 1) {\r\n    // Handle a collection of binary blobs\r\n    return (\r\n      <div>\r\n        {byteArray.map((byteData, index) => (\r\n          <div key={index}>\r\n            <img src={`data:image/jpeg;base64,${btoa(String.fromCharCode(...byteData))}`} alt={`Image ${index}`} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else if (byteArray.length === 1) {\r\n    return (\r\n      <img src={`data:image/jpeg;base64,${btoa(String.fromCharCode(...byteArray[0]))}`} alt=\"Image couldn't be found\" />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BlobToImage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE7B;EACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;IACzC,OAAO,IAAI;EACb;EAEA,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAE3B,IAAIE,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB;IACA,oBACEL,OAAA;MAAAM,QAAA,EACGF,SAAS,CAACG,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BT,OAAA;QAAAM,QAAA,eACEN,OAAA;UAAKU,GAAG,EAAG,0BAAyBC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAGL,QAAQ,CAAC,CAAE,EAAE;UAACM,GAAG,EAAG,SAAQL,KAAM;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD/FT,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC,MAAM,IAAId,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IACjC,oBACEL,OAAA;MAAKU,GAAG,EAAG,0BAAyBC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE;MAACU,GAAG,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAEtH,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF,CAAC;AAAAC,EAAA,GA3BKlB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}