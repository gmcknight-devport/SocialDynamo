{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\user-profile-header.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Avatar } from \"@mui/material\";\nimport BlobToImage from '../util/blob-to-image';\nimport \"./user-profile-header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageUrl = await BlobToImage({\n  byteArray: profilepictureblob\n});\nexport default function UserProfileHeader(_ref) {\n  let {\n    profilepictureblob,\n    name,\n    userid\n  } = _ref;\n  console.log(\"Image url in user-profile-header\" + imageUrl);\n  //Should be checking if array is empty\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/p/${userid}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-user\",\n        children: [imageUrl.length > 0 ? /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            marginRight: '10px'\n          },\n          src: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this) // Use imageUrl as Avatar src\n        : /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            marginRight: '10px'\n          },\n          children: name.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = UserProfileHeader;\nvar _c;\n$RefreshReg$(_c, \"UserProfileHeader\");","map":{"version":3,"names":["React","Link","Avatar","BlobToImage","jsxDEV","_jsxDEV","imageUrl","byteArray","profilepictureblob","UserProfileHeader","_ref","name","userid","console","log","className","children","to","style","textDecoration","length","marginRight","src","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/user-profile-header.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport { Avatar } from \"@mui/material\";\r\nimport BlobToImage from '../util/blob-to-image';\r\nimport \"./user-profile-header.css\";\r\n\r\nconst imageUrl = await BlobToImage({byteArray: profilepictureblob});\r\n\r\nexport default function UserProfileHeader({profilepictureblob, name, userid}) {\r\n\r\n    console.log(\"Image url in user-profile-header\" + imageUrl);\r\n    //Should be checking if array is empty\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to={`/p/${userid}`} style={{ textDecoration: 'none' }}>\r\n                <div className=\"header-user\">\r\n                    {imageUrl.length > 0 ? (\r\n                        <Avatar style={{ marginRight: '10px' }} src={imageUrl} /> // Use imageUrl as Avatar src\r\n                    ) : (\r\n                        <Avatar style={{ marginRight: '10px' }}>\r\n                            {name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                    )}\r\n                    {name}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAAC;EAACI,SAAS,EAAEC;AAAkB,CAAC,CAAC;AAEnE,eAAe,SAASC,iBAAiBA,CAAAC,IAAA,EAAqC;EAAA,IAApC;IAACF,kBAAkB;IAAEG,IAAI;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAExEG,OAAO,CAACC,GAAG,CAAC,kCAAkC,GAAGR,QAAQ,CAAC;EAC1D;;EAEA,oBACID,OAAA;IAAKU,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBX,OAAA,CAACJ,IAAI;MAACgB,EAAE,EAAG,MAAKL,MAAO,EAAE;MAACM,KAAK,EAAE;QAAEC,cAAc,EAAE;MAAO,CAAE;MAAAH,QAAA,eACxDX,OAAA;QAAKU,SAAS,EAAC,aAAa;QAAAC,QAAA,GACvBV,QAAQ,CAACc,MAAM,GAAG,CAAC,gBAChBf,OAAA,CAACH,MAAM;UAACgB,KAAK,EAAE;YAAEG,WAAW,EAAE;UAAO,CAAE;UAACC,GAAG,EAAEhB;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,CAAC;QAAA,eAE1DrB,OAAA,CAACH,MAAM;UAACgB,KAAK,EAAE;YAAEG,WAAW,EAAE;UAAO,CAAE;UAAAL,QAAA,EAClCL,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CACX,EACAf,IAAI;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACG,EAAA,GArBuBpB,iBAAiB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}