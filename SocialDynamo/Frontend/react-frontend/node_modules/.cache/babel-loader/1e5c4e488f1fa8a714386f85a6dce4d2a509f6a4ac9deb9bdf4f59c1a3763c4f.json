{"ast":null,"code":"const BlobToImage = props => {\n  const {\n    byteArray\n  } = props;\n  let images = [];\n\n  //Check if blobData is null or undefined\n  if (byteArray === null || byteArray === undefined) {\n    return null;\n  }\n  if (Array.isArray(byteArray)) {\n    images = byteArray.map((byteData, index) => {\n      const blob = new Blob([new Uint8Array(byteData)], {\n        type: 'image/jpeg'\n      });\n      const imageUrl = URL.createObjectURL(blob);\n\n      // return <img key={index} src={imageUrl} alt={`Image ${index}`} />;   \n      return {\n        original: imageUrl,\n        thumbnail: imageUrl,\n        height: img.naturalHeight\n      };\n    });\n  } else {\n    const blob = new Blob([new Uint8Array(byteArray)], {\n      type: 'image/jpeg'\n    });\n    const imageUrl = URL.createObjectURL(blob);\n    //images.push(<img key={0} src={imageUrl} alt=\"Image\" />);\n    // Use an Image object to get the natural height\n    const img = new Image();\n    img.src = imageUrl;\n    images.push({\n      original: imageUrl,\n      thumbnail: imageUrl,\n      height: img.naturalHeight\n    });\n  }\n  return images;\n};\n_c = BlobToImage;\nexport default BlobToImage;\nvar _c;\n$RefreshReg$(_c, \"BlobToImage\");","map":{"version":3,"names":["BlobToImage","props","byteArray","images","undefined","Array","isArray","map","byteData","index","blob","Blob","Uint8Array","type","imageUrl","URL","createObjectURL","original","thumbnail","height","img","naturalHeight","Image","src","push","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/blob-to-image.js"],"sourcesContent":["const BlobToImage = (props) => {\r\n  const { byteArray } = props;\r\n  let images = [];\r\n\r\n  //Check if blobData is null or undefined\r\n  if (byteArray === null || byteArray === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (Array.isArray(byteArray)) {\r\n    images = byteArray.map((byteData, index) => {\r\n      const blob = new Blob([new Uint8Array(byteData)], { type: 'image/jpeg' });\r\n      const imageUrl = URL.createObjectURL(blob);\r\n\r\n      // return <img key={index} src={imageUrl} alt={`Image ${index}`} />;   \r\n      return { original: imageUrl, thumbnail: imageUrl, height: img.naturalHeight };    \r\n    });\r\n  } else {\r\n    const blob = new Blob([new Uint8Array(byteArray)], { type: 'image/jpeg' });\r\n    const imageUrl = URL.createObjectURL(blob);\r\n    //images.push(<img key={0} src={imageUrl} alt=\"Image\" />);\r\n    // Use an Image object to get the natural height\r\n    const img = new Image();\r\n    img.src = imageUrl;\r\n    \r\n    images.push({\r\n      original: imageUrl,\r\n      thumbnail: imageUrl,\r\n      height: img.naturalHeight\r\n    });\r\n  }  \r\n  return images;\r\n}\r\n\r\nexport default BlobToImage;"],"mappings":"AAAA,MAAMA,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC;EAAU,CAAC,GAAGD,KAAK;EAC3B,IAAIE,MAAM,GAAG,EAAE;;EAEf;EACA,IAAID,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKE,SAAS,EAAE;IACjD,OAAO,IAAI;EACb;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,EAAE;IAC5BC,MAAM,GAAGD,SAAS,CAACK,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC1C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACJ,QAAQ,CAAC,CAAC,EAAE;QAAEK,IAAI,EAAE;MAAa,CAAC,CAAC;MACzE,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;;MAE1C;MACA,OAAO;QAAEO,QAAQ,EAAEH,QAAQ;QAAEI,SAAS,EAAEJ,QAAQ;QAAEK,MAAM,EAAEC,GAAG,CAACC;MAAc,CAAC;IAC/E,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMX,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,UAAU,CAACV,SAAS,CAAC,CAAC,EAAE;MAAEW,IAAI,EAAE;IAAa,CAAC,CAAC;IAC1E,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IAC1C;IACA;IACA,MAAMU,GAAG,GAAG,IAAIE,KAAK,CAAC,CAAC;IACvBF,GAAG,CAACG,GAAG,GAAGT,QAAQ;IAElBX,MAAM,CAACqB,IAAI,CAAC;MACVP,QAAQ,EAAEH,QAAQ;MAClBI,SAAS,EAAEJ,QAAQ;MACnBK,MAAM,EAAEC,GAAG,CAACC;IACd,CAAC,CAAC;EACJ;EACA,OAAOlB,MAAM;AACf,CAAC;AAAAsB,EAAA,GAhCKzB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}