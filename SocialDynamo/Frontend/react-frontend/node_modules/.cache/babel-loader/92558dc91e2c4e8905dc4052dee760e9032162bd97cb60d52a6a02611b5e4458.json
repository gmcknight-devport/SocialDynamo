{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Documents\\\\GitHub\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\util\\\\refresh-login.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { Alert, AlertTitle } from '@mui/material';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RefreshLogin() {\n  _s();\n  var _JSON$parse;\n  const userId = ((_JSON$parse = JSON.parse(sessionStorage.getItem('userId'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.UserId) || null;\n  const [modal, setModal] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const history = useHistory();\n  const handleRefreshToken = async () => {\n    const objMap = {\n      userId\n    };\n    const finalBody = JSON.stringify(objMap);\n\n    //Fetch data\n    const response = await fetch('http://20.49.168.20:80/authentication/refresh-token', {\n      method: 'PUT',\n      credentials: 'include',\n      body: finalBody,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    //Handle different responses\n    const dataWrapper = await response.json();\n    const {\n      statusCode,\n      data\n    } = dataWrapper;\n    if (statusCode !== 200) {\n      sessionStorage.clear();\n      setShowAlert(true);\n    }\n  };\n  const handleModalClose = () => {\n    history.push(ROUTES.LOGIN);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await handleRefreshToken();\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleModalClose,\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-alert\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Session Expired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), \"Session has expired and token cannot be refreshed. You will be redirected to login.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-modal\",\n        onClick: handleModalClose,\n        children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {\n          className: \"closeIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(RefreshLogin, \"a2SaFBSJIBUSotMJGelmEmVcXZQ=\", false, function () {\n  return [useHistory];\n});\n_c = RefreshLogin;\nexport default RefreshLogin;\nvar _c;\n$RefreshReg$(_c, \"RefreshLogin\");","map":{"version":3,"names":["useEffect","useState","useHistory","ROUTES","Alert","AlertTitle","CancelOutlinedIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RefreshLogin","_s","_JSON$parse","userId","JSON","parse","sessionStorage","getItem","UserId","modal","setModal","showAlert","setShowAlert","history","handleRefreshToken","objMap","finalBody","stringify","response","fetch","method","credentials","body","headers","dataWrapper","json","statusCode","data","clear","handleModalClose","push","LOGIN","fetchData","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","severity","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/refresh-login.js"],"sourcesContent":["import { useEffect, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Alert, AlertTitle } from '@mui/material';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n\r\nfunction RefreshLogin() {\r\n    const userId = JSON.parse(sessionStorage.getItem('userId'))?.UserId || null;\r\n    const [modal, setModal] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const history = useHistory();\r\n    \r\n    const handleRefreshToken = async () =>{\r\n        const objMap = { userId };\r\n        const finalBody = JSON.stringify(objMap);\r\n        \r\n        //Fetch data\r\n        const response = await fetch('http://20.49.168.20:80/authentication/refresh-token', {\r\n            method: 'PUT',\r\n            credentials: 'include',\r\n            body: finalBody,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        //Handle different responses\r\n        const dataWrapper = await response.json();\r\n        const { statusCode, data } = dataWrapper;\r\n\r\n        if (statusCode !== 200) {      \r\n            sessionStorage.clear();  \r\n            setShowAlert(true);\r\n        }\r\n    };\r\n\r\n    const handleModalClose = () => {        \r\n        history.push(ROUTES.LOGIN);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await handleRefreshToken();\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>        \r\n            {showAlert && (\r\n                <div className='modal'>\r\n                    <div onClick={handleModalClose} className=\"overlay\"></div>\r\n                    <div className='post-alert'>\r\n                        <Alert severity=\"error\">\r\n                            <AlertTitle>Session Expired</AlertTitle>\r\n                            Session has expired and token cannot be refreshed. You will be redirected to login.\r\n                        </Alert>\r\n                    </div>\r\n                    <button className=\"close-modal\" onClick={handleModalClose}>\r\n                        <CancelOutlinedIcon className='closeIcon'/>\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default RefreshLogin"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}