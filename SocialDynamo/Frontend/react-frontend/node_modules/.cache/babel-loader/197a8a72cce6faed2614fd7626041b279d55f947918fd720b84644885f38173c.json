{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n//Should display 5 user profile, using just user header\n//Should display 5 posts from the hashtag search\n\n//Design\n//\n//Search bar at top, search button (also allow Enter to search)\n//Results below, line to split sections, maybe titles??\n\n//api calls to search users, then done in User Profile Header. Check what's returned from query. \n//api calls to search posts, then done as posts? Check what is returned from query.\n//DOES THE AGGREGATOR DO THIS??\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState({\n    users: [],\n    posts: []\n  });\n  const handleSearch = async () => {\n    await searchApiCall();\n\n    //Clear search bar\n    setSearchTerm('');\n  };\n  const searchApiCall = async () => {\n    try {\n      //Send data              \n      const response = await fetch(`http://20.49.168.20:80/search/${searchTerm}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      // Assuming data is an array of mixed user and post data\n      const users = [];\n      const posts = [];\n      data.forEach(item => {\n        if ('userId' in item) {\n          // It's user data\n          users.push(item);\n        } else if ('postId' in item) {\n          // It's post data\n          posts.push(item);\n        }\n        // Handle other cases if needed\n      });\n\n      setSearchResults({\n        users,\n        posts\n      });\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a user or hashtag\",\n        value: searchTerm,\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setSearchTerm(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {}, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {}, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"4prxMoOqmqJt67Wrt/Vw4U+KnCQ=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","users","posts","handleSearch","searchApiCall","response","fetch","method","headers","data","json","forEach","item","push","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","_ref","target","onClick","map","user","id","post","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/search.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n//Should display 5 user profile, using just user header\r\n//Should display 5 posts from the hashtag search\r\n\r\n//Design\r\n//\r\n//Search bar at top, search button (also allow Enter to search)\r\n//Results below, line to split sections, maybe titles??\r\n\r\n//api calls to search users, then done in User Profile Header. Check what's returned from query. \r\n//api calls to search posts, then done as posts? Check what is returned from query.\r\n//DOES THE AGGREGATOR DO THIS??\r\n\r\nconst Search = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState({ users: [], posts: [] });\r\n\r\n  const handleSearch = async () => {\r\n    \r\n    await searchApiCall();\r\n    \r\n    //Clear search bar\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const searchApiCall = async () => {\r\n    try {\r\n      //Send data              \r\n      const response = await fetch(`http://20.49.168.20:80/search/${searchTerm}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Assuming data is an array of mixed user and post data\r\n      const users = [];\r\n      const posts = [];\r\n\r\n      data.forEach(item => {\r\n        if ('userId' in item) {\r\n          // It's user data\r\n          users.push(item);\r\n        } else if ('postId' in item) {\r\n          // It's post data\r\n          posts.push(item);\r\n        }\r\n        // Handle other cases if needed\r\n      });\r\n\r\n      setSearchResults({\r\n        users,\r\n        posts\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching search results:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Search Page</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a user or hashtag\"\r\n          value={searchTerm}\r\n          onChange={({target}) => setSearchTerm(target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <ul>\r\n          {searchResults.users.map((user) => (\r\n            <li key={user.id}>{/* Render individual user items here */}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2>Posts</h2>\r\n        <ul>\r\n          {searchResults.posts.map((post) => (\r\n            <li key={post.id}>{/* Render individual post items here */}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAE5E,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAE/B,MAAMC,aAAa,CAAC,CAAC;;IAErB;IACAN,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCT,UAAW,EAAC,EAAE;QAC1EU,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMT,KAAK,GAAG,EAAE;MAChB,MAAMC,KAAK,GAAG,EAAE;MAEhBO,IAAI,CAACE,OAAO,CAACC,IAAI,IAAI;QACnB,IAAI,QAAQ,IAAIA,IAAI,EAAE;UACpB;UACAX,KAAK,CAACY,IAAI,CAACD,IAAI,CAAC;QAClB,CAAC,MAAM,IAAI,QAAQ,IAAIA,IAAI,EAAE;UAC3B;UACAV,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC;QAClB;QACA;MACF,CAAC,CAAC;;MAEFZ,gBAAgB,CAAC;QACfC,KAAK;QACLC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,8BAA8B;QAC1CC,KAAK,EAAE1B,UAAW;QAClB2B,QAAQ,EAAEC,IAAA;UAAA,IAAC;YAACC;UAAM,CAAC,GAAAD,IAAA;UAAA,OAAK3B,aAAa,CAAC4B,MAAM,CAACH,KAAK,CAAC;QAAA;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACF1B,OAAA;QAAQiC,OAAO,EAAExB,YAAa;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACN1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAAsB,QAAA,EACGjB,aAAa,CAACE,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBAC5BnC,OAAA,WAASmC,IAAI,CAACC,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+C,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACN1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1B,OAAA;QAAAsB,QAAA,EACGjB,aAAa,CAACG,KAAK,CAAC0B,GAAG,CAAEG,IAAI,iBAC5BrC,OAAA,WAASqC,IAAI,CAACD,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+C,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9EID,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAgFZ,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}