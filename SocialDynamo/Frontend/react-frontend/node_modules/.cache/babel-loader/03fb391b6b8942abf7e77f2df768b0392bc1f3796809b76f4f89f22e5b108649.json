{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Documents\\\\GitHub\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './Profile.css';\nimport ProfileHeader from '../components/profile/ProfileHeader';\nimport LoadingSpinner from '../components/Loader';\nimport Post from '../components/post/Post';\nimport SideNav from '../components/sidebar/SideNav';\nimport RefreshLogin from '../util/RefreshLogin';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction profile() {\n  _s();\n  const [modal, setModal] = useState(false);\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [images, setImages] = useState([]);\n  const [selectedPostIndex, setSelectedPostIndex] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [resultsEnd, setResultsEnd] = useState(false);\n  const url = JSON.parse(localStorage.getItem('url')) || null;\n  const navigate = useNavigate();\n  let page = useRef(1);\n\n  //Initialise posts\n  useEffect(() => {\n    document.title = 'Profile - Social Dynamo';\n    page.current = 1;\n    const fetchData = async () => {\n      await getUserPosts();\n    };\n    fetchData();\n  }, []);\n\n  //Stop scrolling when post modal is open\n  useEffect(() => {\n    document.body.style.overflow = modal ? 'hidden' : 'unset';\n\n    // Cleanup: Reset the style when the component is unmounted\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [modal]);\n\n  //Modal logic\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n  if (modal) {\n    document.body.classList.add('active-modal');\n  } else {\n    document.body.classList.remove('active-modal');\n  }\n\n  //Get user posts from api\n  const getUserPosts = async () => {\n    if (loading || resultsEnd) return;\n    setLoading(true);\n\n    //Ensure token is valid\n    if (!(await RefreshLogin(navigate))) return;\n    try {\n      //Fetch data\n      const response = await fetch(url + `/baseaggregate/userposts/${userId}/${page.current}`, {\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      //Handle different responses\n      if (response.ok) {\n        if (!response.headers.get('content-type').includes('application/json')) {\n          setResultsEnd(true);\n          return;\n        }\n        const responseJson = await response.json();\n        if (responseJson.length === 0) {\n          setResultsEnd(true);\n          return;\n        }\n        page.current += 1;\n        setPosts(prevData => [...prevData, ...responseJson]);\n        for (const post of responseJson) {\n          setImages(prevImages => [...prevImages, post.files[0]]);\n        }\n      } else if (response.status === 400) {\n        console.log(\"In 400: \" + response);\n        setResultsEnd(true);\n      } else {\n        displayError(response.title);\n        setResultsEnd(true);\n      }\n    } catch (error) {\n      displayError(\"Unexpected error occurred, unable to fetch posts.\");\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //Infinite scrolling logic\n  const handleScroll = async () => {\n    if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.scrollHeight) {\n      await getUserPosts();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n\n  //Set post data and open modal\n  const openPost = (event, index) => {\n    const selectedPost = posts[index];\n    if (selectedPost) {\n      setSelectedPostIndex(index);\n      toggleModal();\n    } else {\n      console.error(\"Selected post is undefined.\");\n    }\n  };\n  const handleDeletePost = useCallback(async postId => {\n    const objMap = {\n      userId,\n      postId\n    };\n    const finalBody = JSON.stringify(objMap);\n    try {\n      //Fetch data\n      const response = await fetch(url + '/posts/deletepost', {\n        method: 'DELETE',\n        mode: 'cors',\n        credentials: 'include',\n        body: finalBody,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      //Handle different responses\n      if (response.ok) {\n        setPosts(posts.filter(post => post.postId !== postId));\n        window.location.reload();\n      } else if (response.status === 401) {\n        if (!(await RefreshLogin(navigate))) return true;\n        await handleDeletePost(postId);\n      } else if (response.status === 400) {\n        displayError(response.title);\n      } else {\n        displayError(\"Unexpected error occurred, please try again.\");\n      }\n    } catch (error) {\n      displayError(\"Unexpected error occurred, please try again.\");\n      console.log(error);\n    }\n  });\n  const displayError = message => {\n    toast.error(message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: /*#__PURE__*/_jsxDEV(ProfileHeader, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-profile\",\n      children: loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-grid\",\n      children: images && images.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: data,\n          alt: \"Image not found\",\n          onClick: event => openPost(event, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-end\",\n      children: resultsEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"No More Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"profile-modal-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(Post, {\n          post: posts[selectedPostIndex],\n          onDelete: handleDeletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-close-modal\",\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {\n            className: \"closeIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n_s(profile, \"YRCsXCOIAcLAhd2M7OOks9A3F+k=\", false, function () {\n  return [useParams, useNavigate];\n});\nexport default profile;","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useNavigate","useParams","ProfileHeader","LoadingSpinner","Post","SideNav","RefreshLogin","CancelOutlinedIcon","toast","jsxDEV","_jsxDEV","profile","_s","modal","setModal","userId","posts","setPosts","images","setImages","selectedPostIndex","setSelectedPostIndex","loading","setLoading","resultsEnd","setResultsEnd","url","JSON","parse","localStorage","getItem","navigate","page","document","title","current","fetchData","getUserPosts","body","style","overflow","toggleModal","classList","add","remove","response","fetch","method","mode","credentials","headers","ok","get","includes","responseJson","json","length","prevData","post","prevImages","files","status","console","log","displayError","error","handleScroll","window","innerHeight","documentElement","scrollTop","scrollHeight","addEventListener","removeEventListener","openPost","event","index","selectedPost","handleDeletePost","postId","objMap","finalBody","stringify","filter","location","reload","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","src","alt","onClick","onDelete"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './Profile.css';\nimport ProfileHeader from '../components/profile/ProfileHeader';\nimport LoadingSpinner from '../components/Loader';\nimport Post from '../components/post/Post';\nimport SideNav from '../components/sidebar/SideNav';\nimport RefreshLogin from '../util/RefreshLogin';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport { toast } from \"react-toastify\";\n\nfunction profile() {\n    const [modal, setModal] = useState(false);\n\n    const {userId} = useParams();\n    const [posts, setPosts] = useState([]);\n    const [images, setImages] = useState([]);\n    const [selectedPostIndex, setSelectedPostIndex] = useState('');\n\n    const [loading, setLoading] = useState(false);\n    const [resultsEnd, setResultsEnd] = useState(false);\n\n    const url = JSON.parse(localStorage.getItem('url')) || null;\n    const navigate = useNavigate();\n\n    let page = useRef(1);\n\n    //Initialise posts\n    useEffect(() => {        \n        document.title = 'Profile - Social Dynamo';\n        page.current = 1;\n          \n        const fetchData = async () => {\n            await getUserPosts();\n        };\n\n        fetchData();\n    }, []);\n\n    //Stop scrolling when post modal is open\n    useEffect(() => {\n        document.body.style.overflow = modal ? 'hidden' :  'unset';\n        \n        // Cleanup: Reset the style when the component is unmounted\n        return () => {\n            document.body.style.overflow = 'unset';\n        };\n    }, [modal]);\n\n    //Modal logic\n    const toggleModal = () => {\n        setModal(!modal)\n    }\n\n    if(modal) {\n        document.body.classList.add('active-modal')        \n    } else {\n        document.body.classList.remove('active-modal')\n    }\n\n    //Get user posts from api\n    const getUserPosts = async () => {\n        if (loading || resultsEnd) return;\n        setLoading(true);\n\n        //Ensure token is valid\n        if(!await RefreshLogin(navigate)) return;\n\n        try{\n            //Fetch data\n            const response = await fetch(url + `/baseaggregate/userposts/${userId}/${page.current}`, {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            \n            //Handle different responses\n            if (response.ok) {         \n                if(!response.headers.get('content-type').includes('application/json')) {\n                    setResultsEnd(true);\n                    return;\n                } \n\n                const responseJson = await response.json();\n\n                if(responseJson.length === 0){\n                    setResultsEnd(true);\n                    return;\n                }\n\n                page.current += 1;                \n                setPosts((prevData) => [...prevData, ...responseJson]);  \n                \n                for (const post of responseJson) {                \n                    setImages((prevImages) => [...prevImages, post.files[0]]);\n                }\n\n            }else if(response.status === 400){\n                console.log(\"In 400: \" + response);\n                setResultsEnd(true);            \n            }else {\n                displayError(response.title);\n                setResultsEnd(true);\n            }\n        }catch(error){\n            displayError(\"Unexpected error occurred, unable to fetch posts.\");\n            console.log(error);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n\n    //Infinite scrolling logic\n    const handleScroll = async () => {\n        if (window.innerHeight + document.documentElement.scrollTop >= document.documentElement.scrollHeight) {\n            await getUserPosts();\n        }\n    };\n  \n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [handleScroll]);\n\n    //Set post data and open modal\n    const openPost = (event, index) => {\n        const selectedPost = posts[index];\n\n        if (selectedPost) {\n            setSelectedPostIndex(index);\n            toggleModal();\n        } else {\n            console.error(\"Selected post is undefined.\");\n        }\n    };\n\n    const handleDeletePost = useCallback( async (postId) => {\n        const objMap = { userId, postId };\n        const finalBody = JSON.stringify(objMap);\n\n        try{\n          //Fetch data\n          const response = await fetch(url + '/posts/deletepost', {\n            method: 'DELETE',\n            mode: 'cors',\n            credentials: 'include',\n            body: finalBody,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n          });\n          \n          //Handle different responses\n          if (response.ok) {\n            setPosts(posts.filter(post => post.postId !== postId));\n            window.location.reload();\n          } else if (response.status === 401){\n            if(!await RefreshLogin(navigate)) return true;\n            await handleDeletePost(postId);\n          }else if (response.status === 400){            \n            displayError(response.title)\n          }else{\n            displayError(\"Unexpected error occurred, please try again.\");\n          }\n        }catch(error){\n          displayError(\"Unexpected error occurred, please try again.\");\n          console.log(error);\n        } \n    });\n\n    const displayError = (message) => {\n        toast.error(message);\n    }\n\n    return (\n        <div className='profile'>\n            <SideNav/>\n            <div className='head'>\n                <ProfileHeader userId={userId}/>\n            </div>            \n            <div className='loading-profile'>\n                {loading && <LoadingSpinner />}\n            </div>\n            <div className='post-grid'>  \n                {images && images.map((data, index) => {\n                    return (            \n                        <img className=\"image\"    \n                            key={index}                            \n                            src={data}\n                            alt='Image not found'\n                            onClick={(event) => openPost(event, index)}             \n                        />                     \n                    );\n                })}                  \n            </div>                 \n            <div className='profile-end'>                \n                {resultsEnd && <span>No More Posts</span>} \n            </div>\n            {modal && (\n                <div className='profile-modal'>\n                    <div onClick={toggleModal} className=\"profile-modal-overlay\"></div>\n                    <div className='profile-modal-body'>     \n                        {<Post post={posts[selectedPostIndex]} onDelete={handleDeletePost}/>}\n                        <button className=\"profile-close-modal\" onClick={toggleModal}>\n                            <CancelOutlinedIcon className='closeIcon'/>\n                        </button> \n                    </div>      \n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default profile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}