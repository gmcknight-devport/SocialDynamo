{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const pageSize = 10; // Number of data points to load per page\n  const maxIterations = 20; // Maximum number of iterations to prevent infinite loop\n  const originalWindowHeight = window.innerHeight;\n\n  // Simulated function to generate test data\n  const generateTestData = numberOfPoints => {\n    const testData = [];\n    for (let i = 1; i <= numberOfPoints; i++) {\n      testData.push({\n        id: i,\n        name: `Data Point ${i}`\n      });\n    }\n    return testData;\n  };\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //\n  //THIS ONE WORKS!!!!\n  //\n  useLayoutEffect(() => {\n    let iterations = 0;\n    const loadIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight) {\n        console.log('Broken by height');\n        return; // Break when the container height exceeds the original window height\n      }\n\n      if (iterations >= maxIterations) {\n        console.log('Broken due to max iterations');\n        return; // Break after 5 iterations (maxIterations)\n      }\n\n      console.log(`container ref current client height: ${containerRef.current.clientHeight},\n        container ref current inner height: ${containerRef.current.innerHeight},\n        container ref client height: ${containerRef.clientHeight}\n        container ref inner height: ${containerRef.innerHeight}\n        const window Height: ${originalWindowHeight}\n        window client height: ${window.clientHeight}\n        window inner height: ${window.innerHeight}\n        window outer height: ${window.outerHeight}\n        container height const: ${containerHeight}`);\n      const currentPage = Math.ceil(data.length / pageSize) + 1;\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const newData = generateTestData(endIndex); // Generate test data up to the endIndex\n      setData(prevData => [...prevData, ...newData]);\n      console.log(`Iteration: ${iterations}`);\n      iterations++;\n      requestAnimationFrame(loadIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(loadIteration); // Start the loop\n  }, [containerHeight]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(TestData, \"HLkNu6z+pazK1xHhYiqpOgvoTYA=\");\n_c = TestData;\nexport default TestData;\nvar _c;\n$RefreshReg$(_c, \"TestData\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useRef","jsxDEV","_jsxDEV","TestData","_s","data","setData","containerHeight","setContainerHeight","containerRef","pageSize","maxIterations","originalWindowHeight","window","innerHeight","generateTestData","numberOfPoints","testData","i","push","id","name","setTimeout","current","clientHeight","iterations","loadIteration","console","log","outerHeight","currentPage","Math","ceil","length","startIndex","endIndex","newData","prevData","requestAnimationFrame","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\n\nconst TestData = () => {\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const pageSize = 10; // Number of data points to load per page\n  const maxIterations = 20; // Maximum number of iterations to prevent infinite loop\n  const originalWindowHeight = window.innerHeight;\n\n  // Simulated function to generate test data\n  const generateTestData = (numberOfPoints) => {\n    const testData = [];\n    for (let i = 1; i <= numberOfPoints; i++) {\n      testData.push({ id: i, name: `Data Point ${i}` });\n    }\n    return testData;\n  };\n\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //\n  //THIS ONE WORKS!!!!\n  //\n  useLayoutEffect(() => {\n    let iterations = 0;\n\n    const loadIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight) {\n        console.log('Broken by height');\n        return; // Break when the container height exceeds the original window height\n      }\n\n      if (iterations >= maxIterations) {\n        console.log('Broken due to max iterations');\n        return; // Break after 5 iterations (maxIterations)\n      }\n\n      console.log(`container ref current client height: ${containerRef.current.clientHeight},\n        container ref current inner height: ${containerRef.current.innerHeight},\n        container ref client height: ${containerRef.clientHeight}\n        container ref inner height: ${containerRef.innerHeight}\n        const window Height: ${originalWindowHeight}\n        window client height: ${window.clientHeight}\n        window inner height: ${window.innerHeight}\n        window outer height: ${window.outerHeight}\n        container height const: ${containerHeight}`);\n\n      const currentPage = Math.ceil(data.length / pageSize) + 1;\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const newData = generateTestData(endIndex); // Generate test data up to the endIndex\n      setData((prevData) => [...prevData, ...newData]);\n\n      console.log(`Iteration: ${iterations}`);\n      iterations++;\n\n      requestAnimationFrame(loadIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(loadIteration); // Start the loop\n  }, [containerHeight]);\n\n  return (\n    <div ref={containerRef}>\n      <h1>Test Data</h1>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TestData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}