{"ast":null,"code":"const CreateImageObject = async imageArray => {\n  const createImageObject = async image => {\n    const img = new Image();\n\n    // Create a promise that resolves when the image is loaded\n    const imageLoaded = new Promise(resolve => {\n      img.onload = () => resolve();\n    });\n    img.src = image;\n    // Wait for the image to load\n    const hasLoaded = await imageLoaded;\n    const imageObject = {\n      original: img.src,\n      thumbnail: img.src,\n      height: img.naturalHeight,\n      width: img.naturalWidth\n    };\n    return imageObject;\n  };\n  const processImages = async () => {\n    if (Array.isArray(imageArray)) return await Promise.all(imageArray.map(img => {\n      return createImageObject(img);\n    }));else return await createImageObject(imageArray);\n  };\n  return await processImages();\n};\n_c = CreateImageObject;\nexport default CreateImageObject;\nvar _c;\n$RefreshReg$(_c, \"CreateImageObject\");","map":{"version":3,"names":["CreateImageObject","imageArray","createImageObject","image","img","Image","imageLoaded","Promise","resolve","onload","src","hasLoaded","imageObject","original","thumbnail","height","naturalHeight","width","naturalWidth","processImages","Array","isArray","all","map","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/CreateImageObject.js"],"sourcesContent":["const CreateImageObject = async (imageArray) => { \r\n    const createImageObject = async (image) => {\r\n      const img = new Image();\r\n  \r\n      // Create a promise that resolves when the image is loaded\r\n      const imageLoaded = new Promise((resolve) => {\r\n        img.onload = () => resolve();\r\n      });\r\n  \r\n      img.src = image;\r\n      // Wait for the image to load\r\n      const hasLoaded = await imageLoaded;\r\n\r\n      const imageObject = {\r\n        original: img.src,\r\n        thumbnail: img.src,\r\n        height: img.naturalHeight,\r\n        width: img.naturalWidth\r\n      };\r\n\r\n      return imageObject;\r\n    };\r\n  \r\n    const processImages = async () => {        \r\n      if (Array.isArray(imageArray)) \r\n        return await Promise.all(imageArray.map((img) => { return createImageObject(img); }));\r\n      else return await createImageObject(imageArray);\r\n    };\r\n      \r\n    return await processImages();\r\n  };\r\n  \r\n  export default CreateImageObject;"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,MAAOC,UAAU,IAAK;EAC5C,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;;IAEvB;IACA,MAAMC,WAAW,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC3CJ,GAAG,CAACK,MAAM,GAAG,MAAMD,OAAO,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEFJ,GAAG,CAACM,GAAG,GAAGP,KAAK;IACf;IACA,MAAMQ,SAAS,GAAG,MAAML,WAAW;IAEnC,MAAMM,WAAW,GAAG;MAClBC,QAAQ,EAAET,GAAG,CAACM,GAAG;MACjBI,SAAS,EAAEV,GAAG,CAACM,GAAG;MAClBK,MAAM,EAAEX,GAAG,CAACY,aAAa;MACzBC,KAAK,EAAEb,GAAG,CAACc;IACb,CAAC;IAED,OAAON,WAAW;EACpB,CAAC;EAED,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,KAAK,CAACC,OAAO,CAACpB,UAAU,CAAC,EAC3B,OAAO,MAAMM,OAAO,CAACe,GAAG,CAACrB,UAAU,CAACsB,GAAG,CAAEnB,GAAG,IAAK;MAAE,OAAOF,iBAAiB,CAACE,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC,CAAC,KACnF,OAAO,MAAMF,iBAAiB,CAACD,UAAU,CAAC;EACjD,CAAC;EAED,OAAO,MAAMkB,aAAa,CAAC,CAAC;AAC9B,CAAC;AAACK,EAAA,GA9BExB,iBAAiB;AAgCrB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}