{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Documents\\\\GitHub\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport LoadingSpinner from '../components/loader';\nimport Post from '../components/post/post';\nimport SideNav from '../components/sidebar/sidenav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_NUMBER = 1;\nvar currPage = 1;\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n  const [resultsEnd, setResultsEnd] = useState(false);\n  useEffect(() => {\n    document.title = 'Dashboard - Social Dynamo';\n  }, []);\n  const getPosts = async () => {\n    var _JSON$parse;\n    const userId = ((_JSON$parse = JSON.parse(sessionStorage.getItem('userId'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.userId) || null;\n    //Fetch data\n    const response = await fetch(`http://20.49.168.20:80/account/Profile/${userId}`, {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    //Handle different responses\n    const dataWrapper = await response.json();\n    const {\n      statusCode,\n      data\n    } = dataWrapper;\n    console.log(\"Status code in method of dash is: \" + statusCode);\n    if (statusCode === 200) {\n      console.log(\"Success\");\n    } else if (statusCode === 401) {\n      RefreshLogin();\n    } else {\n      console.log(\"Failed\");\n    }\n\n    // const userId = JSON.parse(sessionStorage.getItem('userId'))?.userId || null;\n    // console.log(\"ID in session storage in dashboard is: \" + userId);\n\n    // //Fetch data\n    // const postResponse = await fetch(`http://20.49.168.20:80/baseaggregate/feed/${userId}/${currPage}`, {\n    //   method: 'GET',\n    //   credentials: 'include',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    // });\n\n    // //Handle different responses\n    // const dataWrapper = await postResponse.json();\n    // const { statusCode, data } = dataWrapper;\n\n    // if (statusCode === 200) {\n\n    //   setData((prevFiles) => [...prevFiles, data]);\n    //   setPage(page + 1);\n\n    // } else if (statusCode === 401){\n    //   RefreshLogin();\n    //   getPosts();\n    // }else {\n    //   setResultsEnd(true);\n    // }\n\n    currPage++;\n  };\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //Load data until it exceeds length of the page\n  useLayoutEffect(() => {\n    let iterations = 0;\n    const maxIterations = 5;\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight || resultsEnd || iterations > maxIterations) return;\n      getPosts();\n      iterations++;\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n  //Infinite scrolling logic\n  const handleScroll = () => {\n    const isScrollingToBottom = window.innerHeight + document.documentElement.scrollTop + 1 >= document.documentElement.scrollHeight;\n    if (isScrollingToBottom && !loading && !resultsEnd) {\n      setLoading(true);\n      getPosts();\n      setTimeout(() => {\n        setLoading(false);\n      }, 1500);\n    }\n  };\n  useLayoutEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), data.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: item[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }, this);\n    }), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }, this), resultsEnd && \"No More Posts\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"PgoDiJjBh45EyoHzfw8HivCw9OA=\");\n_c = Dashboard;\nexport default Dashboard;\n\n// export default Dashboard;\n// import React from 'react'\n// import SideNav from '../components/sidebar/sidenav'\n\n// function dashboard() {\n//   return (\n//     <div>Dashboard\n//       <SideNav/>\n//     </div>\n//   )\n// }\n\n// export default dashboard\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useRef","LoadingSpinner","Post","SideNav","jsxDEV","_jsxDEV","PAGE_NUMBER","currPage","Dashboard","_s","data","setData","containerHeight","setContainerHeight","containerRef","originalWindowHeight","window","innerHeight","page","setPage","loading","setLoading","resultsEnd","setResultsEnd","document","title","getPosts","_JSON$parse","userId","JSON","parse","sessionStorage","getItem","response","fetch","method","credentials","headers","dataWrapper","json","statusCode","console","log","RefreshLogin","setTimeout","current","clientHeight","iterations","maxIterations","initialDataIteration","requestAnimationFrame","handleScroll","isScrollingToBottom","documentElement","scrollTop","scrollHeight","addEventListener","removeEventListener","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","post","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport LoadingSpinner from '../components/loader';\nimport Post from '../components/post/post';\nimport SideNav from '../components/sidebar/sidenav'; \n\nconst PAGE_NUMBER = 1;\nvar currPage = 1;\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n  const [resultsEnd, setResultsEnd] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Dashboard - Social Dynamo';\n  }, []);\n\n  const getPosts = async () => {\n\n\n\n\n  const userId = JSON.parse(sessionStorage.getItem('userId'))?.userId || null;\n  //Fetch data\n  const response = await fetch(`http://20.49.168.20:80/account/Profile/${userId}`, {\n    method: 'GET',\n    credentials:'same-origin',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n  });\n\n  //Handle different responses\n  const dataWrapper = await response.json();\n  const { statusCode, data } = dataWrapper;\n\n  console.log(\"Status code in method of dash is: \" + statusCode);\n\n\n  if (statusCode === 200) {\n    console.log(\"Success\")     \n  } else if (statusCode === 401){\n    RefreshLogin();\n    \n  } else {\n    console.log(\"Failed\")\n  }\n\n\n\n\n\n    // const userId = JSON.parse(sessionStorage.getItem('userId'))?.userId || null;\n    // console.log(\"ID in session storage in dashboard is: \" + userId);\n\n    // //Fetch data\n    // const postResponse = await fetch(`http://20.49.168.20:80/baseaggregate/feed/${userId}/${currPage}`, {\n    //   method: 'GET',\n    //   credentials: 'include',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    // });\n\n    // //Handle different responses\n    // const dataWrapper = await postResponse.json();\n    // const { statusCode, data } = dataWrapper;\n\n    // if (statusCode === 200) {\n      \n    //   setData((prevFiles) => [...prevFiles, data]);\n    //   setPage(page + 1);\n\n    // } else if (statusCode === 401){\n    //   RefreshLogin();\n    //   getPosts();\n    // }else {\n    //   setResultsEnd(true);\n    // }\n\n    currPage++\n  };\n\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //Load data until it exceeds length of the page\n  useLayoutEffect(() => {\n    let iterations = 0;    \n    const maxIterations = 5;\n\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight || resultsEnd || iterations > maxIterations) return;\n      \n      getPosts();\n\n      iterations++;\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n//Infinite scrolling logic\nconst handleScroll = () => {\n  const isScrollingToBottom =\n    window.innerHeight + document.documentElement.scrollTop + 1 >=\n    document.documentElement.scrollHeight\n\n  if (isScrollingToBottom && !loading && !resultsEnd) {\n    setLoading(true);\n\n    getPosts();\n    \n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }\n};\n\nuseLayoutEffect(() => {\n  window.addEventListener('scroll', handleScroll);\n  return () => window.removeEventListener('scroll', handleScroll);\n}, []);\n\n  return (\n    <div ref={containerRef}>   \n      <SideNav/>\n      {data.map((item, index) => {\n          return (\n              <Post key={index} post={item[index]} />\n          );\n      })}\n      {loading && <LoadingSpinner />}\n      {resultsEnd && \"No More Posts\"}\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n// export default Dashboard;\n// import React from 'react'\n// import SideNav from '../components/sidebar/sidenav'\n\n// function dashboard() {\n//   return (\n//     <div>Dashboard\n//       <SideNav/>\n//     </div>\n//   )\n// }\n\n// export default dashboard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,MAAM,QAAQ,OAAO;AAC3E,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAG,CAAC;AACrB,IAAIC,QAAQ,GAAG,CAAC;AAEhB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMiB,YAAY,GAAGd,MAAM,CAAC,CAAC;EAC7B,MAAMe,oBAAoB,GAAGC,MAAM,CAACC,WAAW;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAACS,WAAW,CAAC;EAC7C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd0B,QAAQ,CAACC,KAAK,GAAG,2BAA2B;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,WAAA;IAK7B,MAAMC,MAAM,GAAG,EAAAD,WAAA,GAAAE,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAAL,WAAA,uBAA5CA,WAAA,CAA8CC,MAAM,KAAI,IAAI;IAC3E;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCN,MAAO,EAAC,EAAE;MAC/EO,MAAM,EAAE,KAAK;MACbC,WAAW,EAAC,aAAa;MACzBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACzC,MAAM;MAAEC,UAAU;MAAE9B;IAAK,CAAC,GAAG4B,WAAW;IAExCG,OAAO,CAACC,GAAG,CAAC,oCAAoC,GAAGF,UAAU,CAAC;IAG9D,IAAIA,UAAU,KAAK,GAAG,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,MAAM,IAAIF,UAAU,KAAK,GAAG,EAAC;MAC5BG,YAAY,CAAC,CAAC;IAEhB,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;;IAME;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEAnC,QAAQ,EAAE;EACZ,CAAC;EAEDR,eAAe,CAAC,MAAM;IACpB;IACA6C,UAAU,CAAC,MAAM;MACf,IAAI9B,YAAY,CAAC+B,OAAO,EAAE;QACxBhC,kBAAkB,CAACC,YAAY,CAAC+B,OAAO,CAACC,YAAY,CAAC;MACvD;IACF,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/C,eAAe,CAAC,MAAM;IACpB,IAAIgD,UAAU,GAAG,CAAC;IAClB,MAAMC,aAAa,GAAG,CAAC;IAEvB,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MACjC,IAAInC,YAAY,CAAC+B,OAAO,CAACC,YAAY,GAAG/B,oBAAoB,IAAIO,UAAU,IAAIyB,UAAU,GAAGC,aAAa,EAAE;MAE1GtB,QAAQ,CAAC,CAAC;MAEVqB,UAAU,EAAE;MACZG,qBAAqB,CAACD,oBAAoB,CAAC,CAAC,CAAC;IAC/C,CAAC;IAEDC,qBAAqB,CAACD,oBAAoB,CAAC,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACrC,eAAe,CAAC,CAAC;;EAEvB;EACA,MAAMuC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,mBAAmB,GACvBpC,MAAM,CAACC,WAAW,GAAGO,QAAQ,CAAC6B,eAAe,CAACC,SAAS,GAAG,CAAC,IAC3D9B,QAAQ,CAAC6B,eAAe,CAACE,YAAY;IAEvC,IAAIH,mBAAmB,IAAI,CAAChC,OAAO,IAAI,CAACE,UAAU,EAAE;MAClDD,UAAU,CAAC,IAAI,CAAC;MAEhBK,QAAQ,CAAC,CAAC;MAEVkB,UAAU,CAAC,MAAM;QACfvB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAEDtB,eAAe,CAAC,MAAM;IACpBiB,MAAM,CAACwC,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAC/C,OAAO,MAAMnC,MAAM,CAACyC,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACE9C,OAAA;IAAKqD,GAAG,EAAE5C,YAAa;IAAA6C,QAAA,gBACrBtD,OAAA,CAACF,OAAO;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACTrD,IAAI,CAACsD,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACvB,oBACI7D,OAAA,CAACH,IAAI;QAAaiE,IAAI,EAAEF,IAAI,CAACC,KAAK;MAAE,GAAzBA,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IAE/C,CAAC,CAAC,EACD3C,OAAO,iBAAIf,OAAA,CAACJ,cAAc;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BzC,UAAU,IAAI,eAAe;EAAA;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACtD,EAAA,CA3IID,SAAS;AAAA4D,EAAA,GAAT5D,SAAS;AA6If,eAAeA,SAAS;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}