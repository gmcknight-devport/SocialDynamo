{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Documents\\\\GitHub\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport LoadingSpinner from '../components/loader';\nimport Post from '../components/post/post';\nimport SideNav from '../components/sidebar/sidenav';\nimport RefreshLogin from '../util/refresh-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_NUMBER = 1;\nconst MaxSeed = 100;\nvar currPage = 1;\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n  const [resultsEnd, setResultsEnd] = useState(false);\n  useEffect(() => {\n    document.title = 'Dashboard - Social Dynamo';\n  }, []);\n  const getPosts = async () => {\n    _s();\n    const {\n      user\n    } = useContext(LoggedInUserContext);\n    const userId = user.userId;\n\n    //Fetch data\n    const postResponse = await fetch(`http://20.49.168.20:80/baseaggregate/feed/${userId}/${currPage}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    //Handle different responses\n    const dataWrapper = await postResponse.json();\n    const {\n      statusCode,\n      data\n    } = dataWrapper;\n    if (statusCode === 200) {\n      setData(prevFiles => [...prevFiles, data]);\n      setPage(page + 1);\n    } else if (statusCode === 401) {\n      RefreshLogin();\n    } else {\n      setResultsEnd(true);\n    }\n    currPage++;\n  };\n  _s(getPosts, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //Load data until it exceeds length of the page\n  useLayoutEffect(() => {\n    let iterations = 0;\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight || resultsEnd) return;\n      getPosts();\n      iterations++;\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n  //Infinite scrolling logic\n  const handleScroll = () => {\n    // const isScrollingToBottom =\n    //   window.innerHeight + document.documentElement.scrollTop + 1 >=\n    //   document.documentElement.scrollHeight\n\n    // if (isScrollingToBottom && !loading && !resultsEnd) {\n    //   setLoading(true);\n\n    //   getPosts();\n    //   // const newData = getPosts();\n    //   // setData(prevData => [...prevData, ...newData]);\n\n    //   setTimeout(() => {\n    //     setLoading(false);\n    //   }, 1500);\n    // }\n  };\n  useLayoutEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), data.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: item[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    }), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), resultsEnd && \"No More Posts\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"PgoDiJjBh45EyoHzfw8HivCw9OA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useRef","useContext","LoadingSpinner","Post","SideNav","RefreshLogin","jsxDEV","_jsxDEV","PAGE_NUMBER","MaxSeed","currPage","Dashboard","_s2","_s","$RefreshSig$","data","setData","containerHeight","setContainerHeight","containerRef","originalWindowHeight","window","innerHeight","page","setPage","loading","setLoading","resultsEnd","setResultsEnd","document","title","getPosts","user","LoggedInUserContext","userId","postResponse","fetch","method","credentials","headers","dataWrapper","json","statusCode","prevFiles","setTimeout","current","clientHeight","iterations","initialDataIteration","requestAnimationFrame","handleScroll","addEventListener","removeEventListener","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","post","_c","$RefreshReg$"],"sources":["C:/Users/glenn/Documents/GitHub/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport LoadingSpinner from '../components/loader';\nimport Post from '../components/post/post';\nimport SideNav from '../components/sidebar/sidenav'; \nimport RefreshLogin from '../util/refresh-login';\n\nconst PAGE_NUMBER = 1;\nconst MaxSeed = 100;\nvar currPage = 1;\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n  const [resultsEnd, setResultsEnd] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Dashboard - Social Dynamo';\n  }, []);\n\n  const getPosts = async () => {\n    \n    const { user } = useContext(LoggedInUserContext);\n    const userId = user.userId;\n\n    //Fetch data\n    const postResponse = await fetch(`http://20.49.168.20:80/baseaggregate/feed/${userId}/${currPage}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    //Handle different responses\n    const dataWrapper = await postResponse.json();\n    const { statusCode, data } = dataWrapper;\n\n    if (statusCode === 200) {\n      \n      setData((prevFiles) => [...prevFiles, data]);\n      setPage(page + 1);\n\n    } else if (statusCode === 401){\n      RefreshLogin();\n    }else {\n      setResultsEnd(true);\n    }\n\n    currPage++\n  };\n\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  //Load data until it exceeds length of the page\n  useLayoutEffect(() => {\n    let iterations = 0;\n\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight || resultsEnd) return;\n      \n      getPosts();\n\n      iterations++;\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n//Infinite scrolling logic\nconst handleScroll = () => {\n  // const isScrollingToBottom =\n  //   window.innerHeight + document.documentElement.scrollTop + 1 >=\n  //   document.documentElement.scrollHeight\n\n  // if (isScrollingToBottom && !loading && !resultsEnd) {\n  //   setLoading(true);\n\n  //   getPosts();\n  //   // const newData = getPosts();\n  //   // setData(prevData => [...prevData, ...newData]);\n\n  //   setTimeout(() => {\n  //     setLoading(false);\n  //   }, 1500);\n  // }\n};\n\nuseLayoutEffect(() => {\n  window.addEventListener('scroll', handleScroll);\n  return () => window.removeEventListener('scroll', handleScroll);\n}, []);\n\n  return (\n    <div ref={containerRef}>      \n\n        <SideNav/>\n        {data.map((item, index) => {\n            return (\n                <Post key={index} post={item[index]} />\n            );\n        })}\n      {loading && <LoadingSpinner />}\n      {resultsEnd && \"No More Posts\"}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}