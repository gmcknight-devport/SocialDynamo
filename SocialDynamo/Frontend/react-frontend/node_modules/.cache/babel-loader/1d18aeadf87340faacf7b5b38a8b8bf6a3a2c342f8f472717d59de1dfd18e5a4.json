{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\hooks\\\\use-user.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = createContext < UserProvider.PropTypes | null > null;\nexport function useUser() {\n  _s();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}\n_s(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default function UserProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [values, setValues] = useState({\n    userId: null,\n    name: null,\n    profileDescription: null,\n    numberFollowers: null,\n    profilePicture: null\n  });\n  const updateValue = (key, newValue) => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [key]: newValue\n    }));\n  };\n  const setAllValues = newValues => {\n    console.log('Setting all values:', newValues);\n    setValues(prevValues => ({\n      ...prevValues,\n      ...newValues\n    }));\n    console.log(newValues.userId);\n    console.log(values.userId);\n    //\n    console.log(values.userId);\n  };\n  UserProvider.propTypes = {\n    userId: PropTypes.string,\n    name: PropTypes.string,\n    profileDescription: PropTypes.string,\n    numberFollowers: PropTypes.number,\n    profilePicture: any\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      ...values,\n      updateValue,\n      setAllValues\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s2(UserProvider, \"60zwvhXlTjuZWs63tPpnL39dtLI=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useContext","PropTypes","jsxDEV","_jsxDEV","UserContext","UserProvider","useUser","_s","context","Error","_ref","_s2","children","values","setValues","userId","name","profileDescription","numberFollowers","profilePicture","updateValue","key","newValue","prevValues","setAllValues","newValues","console","log","propTypes","string","number","any","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/hooks/use-user.js"],"sourcesContent":["import { createContext, useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserContext = createContext<UserProvider.PropTypes | null>(null);\r\n\r\nexport function useUser() {\r\n    const context = useContext(UserContext);\r\n    if (!context) {\r\n      throw new Error('useUser must be used within a UserProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport default function UserProvider({ children }) {\r\n    const [values, setValues] = useState({\r\n      userId: null,\r\n      name: null,\r\n      profileDescription: null,\r\n      numberFollowers: null,\r\n      profilePicture: null,\r\n    });\r\n          \r\n    const updateValue = (key, newValue) => {\r\n        setValues((prevValues) => ({\r\n            ...prevValues,\r\n            [key]: newValue,\r\n        }));\r\n    };\r\n\r\n    const setAllValues = (newValues) => {\r\n        console.log('Setting all values:', newValues);\r\n        setValues(prevValues => ({ ...prevValues, ...newValues }));\r\n        console.log(newValues.userId);\r\n        console.log(values.userId);\r\n        //\r\n        console.log(values.userId);\r\n    };\r\n\r\n    UserProvider.propTypes = {\r\n        userId: PropTypes.string,\r\n        name: PropTypes.string,\r\n        profileDescription: PropTypes.string,\r\n        numberFollowers: PropTypes.number,\r\n        profilePicture: any\r\n      };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ ...values, updateValue, setAllValues }}>\r\n          {children}\r\n        </UserContext.Provider>\r\n    );          \r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC3D,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGN,aAAa,GAACO,YAAY,CAACJ,SAAS,GAAG,IAAI,GAAE,IAAK;AAEtE,OAAO,SAASK,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGR,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAClB;AAACD,EAAA,CANeD,OAAO;AAQvB,eAAe,SAASD,YAAYA,CAAAK,IAAA,EAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC;IACnCgB,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,IAAI;IACVC,kBAAkB,EAAE,IAAI;IACxBC,eAAe,EAAE,IAAI;IACrBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACnCR,SAAS,CAAES,UAAU,KAAM;MACvB,GAAGA,UAAU;MACb,CAACF,GAAG,GAAGC;IACX,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAME,YAAY,GAAIC,SAAS,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,SAAS,CAAC;IAC7CX,SAAS,CAACS,UAAU,KAAK;MAAE,GAAGA,UAAU;MAAE,GAAGE;IAAU,CAAC,CAAC,CAAC;IAC1DC,OAAO,CAACC,GAAG,CAACF,SAAS,CAACV,MAAM,CAAC;IAC7BW,OAAO,CAACC,GAAG,CAACd,MAAM,CAACE,MAAM,CAAC;IAC1B;IACAW,OAAO,CAACC,GAAG,CAACd,MAAM,CAACE,MAAM,CAAC;EAC9B,CAAC;EAEDV,YAAY,CAACuB,SAAS,GAAG;IACrBb,MAAM,EAAEd,SAAS,CAAC4B,MAAM;IACxBb,IAAI,EAAEf,SAAS,CAAC4B,MAAM;IACtBZ,kBAAkB,EAAEhB,SAAS,CAAC4B,MAAM;IACpCX,eAAe,EAAEjB,SAAS,CAAC6B,MAAM;IACjCX,cAAc,EAAEY;EAClB,CAAC;EAEH,oBACI5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGpB,MAAM;MAAEO,WAAW;MAAEI;IAAa,CAAE;IAAAZ,QAAA,EACnEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE/B;AAAC1B,GAAA,CAtCuBN,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}