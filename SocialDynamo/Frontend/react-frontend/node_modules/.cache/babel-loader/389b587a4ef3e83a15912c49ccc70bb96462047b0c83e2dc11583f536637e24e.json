{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\user-popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UserProfileHeader from './user-profile-header';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport \"./user-popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserPopup(_ref) {\n  _s();\n  let {\n    title,\n    data\n  } = _ref;\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n  if (modal) {\n    document.body.classList.add('active-modal');\n  } else {\n    document.body.classList.remove('active-modal');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleModal,\n      className: \"btn-modal\",\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), data.map((userData, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UserProfileHeader, {\n              profilepictureblob: userData.profilePictureBlob,\n              name: userData.name,\n              userid: userData.userid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: toggleModal,\n          children: /*#__PURE__*/_jsxDEV(CancelOutlinedIcon, {\n            className: \"closeIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UserPopup, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = UserPopup;\nUserPopup.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    profilePictureBlob: PropTypes.arrayBuffer,\n    // Enforce profilePictureBlob as an ArrayBuffer\n    name: PropTypes.string.isRequired,\n    // Enforce that name is a string and is required\n    userid: PropTypes.string.isRequired\n  })).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"UserPopup\");","map":{"version":3,"names":["React","useState","PropTypes","UserProfileHeader","CancelOutlinedIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPopup","_ref","_s","title","data","modal","setModal","toggleModal","document","body","classList","add","remove","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","userData","index","profilepictureblob","profilePictureBlob","name","userid","_c","propTypes","string","isRequired","arrayOf","shape","arrayBuffer","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/user-popup.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport UserProfileHeader from './user-profile-header';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport \"./user-popup.css\"\r\n\r\nexport default function UserPopup({title, data}) {\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    if(modal) {\r\n        document.body.classList.add('active-modal')\r\n    } else {\r\n        document.body.classList.remove('active-modal')\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={toggleModal} className=\"btn-modal\">\r\n        Open\r\n      </button>\r\n\r\n      {modal && (\r\n        <div className=\"modal\">\r\n          <div onClick={toggleModal} className=\"overlay\"></div>\r\n            <div className=\"modal-content\">\r\n                <h1>{title}</h1>\r\n                {/* Map data array to UserProfileHeader components */}\r\n                {data.map((userData, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <UserProfileHeader                            \r\n                                profilepictureblob={userData.profilePictureBlob}\r\n                                name={userData.name}\r\n                                userid={userData.userid}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n                <button className=\"close-modal\" onClick={toggleModal}>\r\n                    <CancelOutlinedIcon className='closeIcon'></CancelOutlinedIcon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n      )}      \r\n    </>\r\n  )\r\n}\r\n\r\nUserPopup.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    data: PropTypes.arrayOf(PropTypes.shape({\r\n        profilePictureBlob: PropTypes.arrayBuffer, // Enforce profilePictureBlob as an ArrayBuffer\r\n        name: PropTypes.string.isRequired, // Enforce that name is a string and is required\r\n        userid: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}