{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport LoadingSpinner from '../components/loadingspinner';\nimport ReactLoader from '../components/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_NUMBER = 1;\nconst MaxSeed = 100;\nvar currPage = 1;\nconst TestData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const pageSize = 10; // Number of data points to load per page\n  const maxIterations = 20; // Maximum number of iterations to prevent infinite loop\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n\n  // Simulated function to generate test data\n  const generateTestData = numberOfPoints => {\n    const testData = [];\n    for (let i = 1; i <= numberOfPoints; i++) {\n      testData.push({\n        id: i,\n        name: `Data Point ${i}`\n      });\n    }\n    return testData;\n  };\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n  useLayoutEffect(() => {\n    let iterations = 0;\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight) {\n        console.log('Broken by height');\n        return; // Break when the container height exceeds the original window height\n      }\n\n      if (iterations >= maxIterations) {\n        console.log('Broken due to max iterations');\n        return; // Break after 5 iterations (maxIterations)\n      }\n\n      addDataToPage();\n      console.log(`Iteration: ${iterations}`);\n      iterations++;\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n  //Function to add data\n  const addDataToPage = () => {\n    let testData = [];\n    console.log(\"In add data method\");\n    ++currPage;\n    let startIndex = (currPage - 1) * 10;\n    console.log(`Start index: ${startIndex}, maxSeed: ${MaxSeed}`);\n    for (let i = startIndex; i < startIndex + pageSize; i++) {\n      testData.push({\n        id: i,\n        name: `Data Point ${i}`\n      });\n    }\n    currPage++;\n    setData(prevData => [...prevData, ...testData]);\n    setLoading(false);\n  };\n\n  //Scroll logic\n  //   useEffect(() => {\n  //     setTimeout(async () => {\n  //       addDataToPage()\n  //     }, 1500);\n  // }, [page]);\n\n  // useEffect(() => {\n  //     window.addEventListener(\"scroll\", handleScroll);\n\n  //     return () => window.removeEventListener(\"scroll\", handleScroll);\n  // }, []);\n\n  const handleScroll = async () => {\n    //const handleScroll = async () => {\n    const isScrolledToBottom = window.innerHeight + document.documentElement.scrollTop + 1 >= document.documentElement.scrollHeight;\n    if (isScrolledToBottom) {\n      setLoading(true);\n      console.log(`Should be loading, loading: ${loading}`);\n      setPage(prev => prev + 1);\n    }\n  };\n  useEffect(() => {\n    const scrollHandler = async () => {\n      await handleScroll(); // Execute the scroll logic\n      setLoading(true); // Set loading state to true after scroll logic is done\n    };\n\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => window.removeEventListener(\"scroll\", scrollHandler);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), console.log(\"Should display spinner\"), console.log(`loading: ${loading}`), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(TestData, \"gCXPH66O8Gt37kOCyQJr+W7T7yU=\");\n_c = TestData;\nexport default TestData;\nvar _c;\n$RefreshReg$(_c, \"TestData\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useRef","LoadingSpinner","ReactLoader","jsxDEV","_jsxDEV","PAGE_NUMBER","MaxSeed","currPage","TestData","_s","data","setData","containerHeight","setContainerHeight","containerRef","pageSize","maxIterations","originalWindowHeight","window","innerHeight","page","setPage","loading","setLoading","generateTestData","numberOfPoints","testData","i","push","id","name","setTimeout","current","clientHeight","iterations","initialDataIteration","console","log","addDataToPage","requestAnimationFrame","startIndex","prevData","handleScroll","isScrolledToBottom","document","documentElement","scrollTop","scrollHeight","prev","scrollHandler","addEventListener","removeEventListener","ref","children","map","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport LoadingSpinner from '../components/loadingspinner';\nimport ReactLoader from '../components/loader';\n\nconst PAGE_NUMBER = 1;\nconst MaxSeed = 100;\nvar currPage = 1;\n\nconst TestData = () => {\n  const [data, setData] = useState([]);\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef();\n  const pageSize = 10; // Number of data points to load per page\n  const maxIterations = 20; // Maximum number of iterations to prevent infinite loop\n  const originalWindowHeight = window.innerHeight;\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n\n  // Simulated function to generate test data\n  const generateTestData = (numberOfPoints) => {\n    const testData = [];\n    for (let i = 1; i <= numberOfPoints; i++) {\n      testData.push({ id: i, name: `Data Point ${i}` });\n    }\n    \n    return testData;\n  };\n\n  useLayoutEffect(() => {\n    // Measure the container height and update the state\n    setTimeout(() => {\n      if (containerRef.current) {\n        setContainerHeight(containerRef.current.clientHeight);\n      }\n    }, 0);\n  }, []);\n\n  useLayoutEffect(() => {\n    let iterations = 0;\n\n    const initialDataIteration = () => {\n      if (containerRef.current.clientHeight > originalWindowHeight) {\n        console.log('Broken by height');\n        return; // Break when the container height exceeds the original window height\n      }\n\n      if (iterations >= maxIterations) {\n        console.log('Broken due to max iterations');\n        return; // Break after 5 iterations (maxIterations)\n      }\n\n      addDataToPage();\n\n      console.log(`Iteration: ${iterations}`);\n      iterations++;\n\n      requestAnimationFrame(initialDataIteration); // Continue to the next iteration\n    };\n\n    requestAnimationFrame(initialDataIteration); // Start the loop\n  }, [containerHeight]);\n\n  //Function to add data\n  const addDataToPage = () => {\n    let testData = [];\n    console.log(\"In add data method\");\n    ++currPage;\n    let startIndex = (currPage - 1) * 10\n    console.log(`Start index: ${startIndex}, maxSeed: ${MaxSeed}`);\n    \n    for (let i = startIndex; i < startIndex + pageSize; i++) {        \n      testData.push({ id: i, name: `Data Point ${i}` });\n    }\n\n    currPage++;    \n    setData((prevData) => [...prevData, ...testData]);\n    setLoading(false);\n  }\n  \n  //Scroll logic\n//   useEffect(() => {\n//     setTimeout(async () => {\n//       addDataToPage()\n//     }, 1500);\n// }, [page]);\n\n// useEffect(() => {\n//     window.addEventListener(\"scroll\", handleScroll);\n\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\n// }, []);\n\nconst handleScroll = async () => {\n//const handleScroll = async () => {\n  const isScrolledToBottom =\n        window.innerHeight + document.documentElement.scrollTop + 1 >=\n        document.documentElement.scrollHeight;\n\n    if (isScrolledToBottom) {\n        setLoading(true);\n        console.log(`Should be loading, loading: ${loading}`)\n        setPage((prev) => prev + 1);\n    }\n};\nuseEffect(() => {\n  const scrollHandler = async () => {\n    await handleScroll(); // Execute the scroll logic\n    setLoading(true);    // Set loading state to true after scroll logic is done\n  };\n\n  window.addEventListener(\"scroll\", scrollHandler);\n\n  return () => window.removeEventListener(\"scroll\", scrollHandler);\n}, []);\n\n  return (\n    <div ref={containerRef}>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      {console.log(\"Should display spinner\")}\n      {console.log(`loading: ${loading}`)}\n      {loading && <LoadingSpinner />}\n    </div>\n  );\n};\n\nexport default TestData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}