{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\pages\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Post from '../components/post/post';\nimport UserProfileHeader from '../components/user-profile-header';\nimport \"./search.css\";\nimport SearchIcon from '@mui/icons-material/Search';\n\n//Design\n//\n//Results below, line to split sections, maybe titles??\n//\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState({\n    users: [],\n    posts: []\n  });\n  const handleSearch = async () => {\n    //\n    //\n    //await searchApiCall();\n    //\n    //\n\n    const usersTestData = [{\n      ProfilePictureBlob: null,\n      Forename: 'User 1',\n      Surname: 'The First',\n      UserId: 'user1'\n    }, {\n      ProfilePictureBlob: null,\n      Forename: 'User 2',\n      Surname: 'The Second',\n      UserId: 'user2'\n    }, {\n      ProfilePictureBlob: null,\n      Forename: 'User 3',\n      Surname: 'The Third',\n      UserId: 'user3'\n    }];\n    setSearchResults({\n      users: usersTestData,\n      posts: null\n    });\n    //\n    //\n    //\n\n    //Clear search bar\n    setSearchTerm('');\n  };\n  const searchApiCall = async () => {\n    try {\n      //Send data              \n      const response = await fetch(`http://20.49.168.20:80/search/${searchTerm}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      // Assuming data is an array of mixed user and post data\n      const users = [];\n      const posts = [];\n      data.forEach(item => {\n        if ('userId' in item) {\n          // It's user data\n          users.push(item);\n        } else if ('postId' in item) {\n          // It's post data\n          posts.push(item);\n        }\n        // Handle other cases if needed\n      });\n\n      setSearchResults({\n        users,\n        posts\n      });\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        placeholder: \"Search for a user or hashtag\",\n        value: searchTerm,\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setSearchTerm(target.value);\n        },\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n        className: \"search-icon\",\n        onClick: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-results\",\n        children: searchResults.users.map((userData, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UserProfileHeader, {\n              profilepictureblob: userData.ProfilePictureBlob,\n              name: userData.Forename + ' ' + userData.Surname,\n              userid: userData.UserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"4prxMoOqmqJt67Wrt/Vw4U+KnCQ=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Post","UserProfileHeader","SearchIcon","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","users","posts","handleSearch","usersTestData","ProfilePictureBlob","Forename","Surname","UserId","searchApiCall","response","fetch","method","headers","data","json","forEach","item","push","error","console","handleKeyPress","event","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","_ref","target","onKeyDown","onClick","map","userData","index","profilepictureblob","name","userid","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/pages/search.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Post from '../components/post/post';\r\nimport UserProfileHeader from '../components/user-profile-header';\r\nimport \"./search.css\"\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n//Design\r\n//\r\n//Results below, line to split sections, maybe titles??\r\n//\r\n//\r\n\r\n\r\nconst Search = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState({ users: [], posts: [] });\r\n\r\n  const handleSearch = async () => {\r\n    \r\n    //\r\n    //\r\n    //await searchApiCall();\r\n    //\r\n    //\r\n\r\n\r\n    const usersTestData = [\r\n      {\r\n        ProfilePictureBlob: null,\r\n        Forename: 'User 1',\r\n        Surname: 'The First',\r\n        UserId: 'user1',\r\n      },\r\n      {\r\n        ProfilePictureBlob: null,\r\n        Forename: 'User 2',\r\n        Surname: 'The Second',\r\n        UserId: 'user2',\r\n      },\r\n      {\r\n        ProfilePictureBlob: null,\r\n        Forename: 'User 3',\r\n        Surname: 'The Third',\r\n        UserId: 'user3',\r\n      }\r\n    ];\r\n\r\n    setSearchResults({\r\n      users: usersTestData,\r\n      posts: null\r\n    });\r\n    //\r\n    //\r\n    //\r\n\r\n\r\n    //Clear search bar\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const searchApiCall = async () => {\r\n    try {\r\n      //Send data              \r\n      const response = await fetch(`http://20.49.168.20:80/search/${searchTerm}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Assuming data is an array of mixed user and post data\r\n      const users = [];\r\n      const posts = [];\r\n\r\n      data.forEach(item => {\r\n        if ('userId' in item) {\r\n          // It's user data\r\n          users.push(item);\r\n        } else if ('postId' in item) {\r\n          // It's post data\r\n          posts.push(item);\r\n        }\r\n        // Handle other cases if needed\r\n      });\r\n\r\n      setSearchResults({\r\n        users,\r\n        posts\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching search results:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='search'>\r\n      <h1>Search</h1>\r\n      <div className='search-top'>\r\n        <input\r\n          className='search-bar'\r\n          type=\"text\"\r\n          placeholder=\"Search for a user or hashtag\"\r\n          value={searchTerm}\r\n          onChange={({target}) => setSearchTerm(target.value)}\r\n          onKeyDown={handleKeyPress}\r\n        />\r\n        <SearchIcon className={\"search-icon\"} onClick={handleSearch}/>\r\n      </div>\r\n    \r\n      <div className='results'>\r\n        <div className='user-results'>\r\n          {/* Map data array to UserProfileHeader components */}\r\n          {searchResults.users.map((userData, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <UserProfileHeader                            \r\n                  profilepictureblob={userData.ProfilePictureBlob}\r\n                  name={userData.Forename + ' ' + userData.Surname}\r\n                  userid={userData.UserId}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {/* <div className='post-results'>\r\n          {searchResults.posts.map((postData, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Post                            \r\n                  postId={postData.PostId}\r\n                  userId={postData.UserId}\r\n                  usersName={postData.UsersName}\r\n                  profilePicture={postData.ProfilePicture}\r\n                  hashtag={postData.Hashtag}\r\n                  caption={postData.Caption}\r\n                  postedAt={postData.PostedAt}\r\n                  mediaItemIds={postData.MediaItemIds}\r\n                  files={postData.Files}\r\n                  likes={postData.Likes}\r\n                  comments={postData.Comments}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}