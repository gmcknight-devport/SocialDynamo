{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\util\\\\blob-to-image.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlobToImage = props => {\n  const {\n    blobData\n  } = props;\n\n  // Check if blobData is null or undefined\n  if (blobData === null || blobData === undefined) {\n    return null;\n  }\n  if (Array.isArray(blobData)) {\n    // Handle a collection of binary blobs\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blobData.map((blob, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(blob),\n          alt: `Image ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  } else {\n    // Handle a single binary blob\n    const imageUrl = URL.createObjectURL(blobData);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Image couldn't be found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this);\n  }\n};\n_c = BlobToImage;\nexport default BlobToImage;\nvar _c;\n$RefreshReg$(_c, \"BlobToImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BlobToImage","props","blobData","undefined","Array","isArray","children","map","blob","index","src","URL","createObjectURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","_c","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/util/blob-to-image.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst BlobToImage = (props) => {\r\n\r\n  const { blobData } = props;\r\n  \r\n  // Check if blobData is null or undefined\r\n  if (blobData === null || blobData === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (Array.isArray(blobData)) {\r\n      // Handle a collection of binary blobs\r\n      return (\r\n        <div>\r\n          {blobData.map((blob, index) => (\r\n            <div key={index}>\r\n              <img src={URL.createObjectURL(blob)} alt={`Image ${index}`} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Handle a single binary blob\r\n      const imageUrl = URL.createObjectURL(blobData);\r\n      return <img src={imageUrl} alt=\"Image couldn't be found\" />;\r\n    }\r\n  };\r\n\r\nexport default BlobToImage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE7B,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;;EAE1B;EACA,IAAIC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKC,SAAS,EAAE;IAC/C,OAAO,IAAI;EACb;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;IACzB;IACA,oBACEH,OAAA;MAAAO,QAAA,EACGJ,QAAQ,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBV,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAKW,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAE;UAACK,GAAG,EAAG,SAAQJ,KAAM;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADtDR,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC,MAAM;IACL;IACA,MAAMC,QAAQ,GAAGP,GAAG,CAACC,eAAe,CAACV,QAAQ,CAAC;IAC9C,oBAAOH,OAAA;MAAKW,GAAG,EAAEQ,QAAS;MAACL,GAAG,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7D;AACF,CAAC;AAACE,EAAA,GAzBEnB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}