{"ast":null,"code":"var _jsxFileName = \"D:\\\\Glenn McKnight\\\\Documents\\\\Github\\\\SocialDynamo\\\\SocialDynamo\\\\Frontend\\\\react-frontend\\\\src\\\\components\\\\sidebar\\\\suggestions.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport { getSuggestedProfiles } from '../../services/firebase';\nimport SuggestedProfile from './suggested-profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Suggestions(_ref) {\n  _s();\n  let {\n    userId,\n    following,\n    loggedInUserDocId\n  } = _ref;\n  const [profiles, setProfiles] = useState(null);\n  useEffect(() => {\n    async function suggestedProfiles() {\n      const response = await getSuggestedProfiles(userId, following);\n      setProfiles(response);\n    }\n    if (userId) {\n      suggestedProfiles();\n    }\n  }, [userId]);\n  // hint: use the firebase service (call using userId)\n  // getSuggestedProfiles\n  // call the async function ^^^^ within useEffect\n  // store it in state\n  // go ahead and render (wait on the profiles as in 'skeleton')\n\n  return !profiles ? /*#__PURE__*/_jsxDEV(Skeleton, {\n    count: 1,\n    height: 150,\n    className: \"mt-5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : profiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm flex items-center align-items justify-between mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-gray-base\",\n        children: \"Suggestions for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 grid gap-5\",\n      children: profiles.map(profile => /*#__PURE__*/_jsxDEV(SuggestedProfile, {\n        profileDocId: profile.docId,\n        username: profile.username,\n        profileId: profile.userId,\n        userId: userId,\n        loggedInUserDocId: loggedInUserDocId\n      }, profile.docId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : null;\n}\n_s(Suggestions, \"qxjxnT9amCcb9SFSsQkfAAyVGGQ=\");\n_c = Suggestions;\nSuggestions.propTypes = {\n  userId: PropTypes.string,\n  following: PropTypes.array,\n  loggedInUserDocId: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"names":["useState","useEffect","PropTypes","Skeleton","getSuggestedProfiles","SuggestedProfile","jsxDEV","_jsxDEV","Suggestions","_ref","_s","userId","following","loggedInUserDocId","profiles","setProfiles","suggestedProfiles","response","count","height","className","fileName","_jsxFileName","lineNumber","columnNumber","length","children","map","profile","profileDocId","docId","username","profileId","_c","propTypes","string","array","$RefreshReg$"],"sources":["D:/Glenn McKnight/Documents/Github/SocialDynamo/SocialDynamo/Frontend/react-frontend/src/components/sidebar/suggestions.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport { getSuggestedProfiles } from '../../services/firebase';\nimport SuggestedProfile from './suggested-profile';\n\nexport default function Suggestions({ userId, following, loggedInUserDocId }) {\n  const [profiles, setProfiles] = useState(null);\n\n  useEffect(() => {\n    async function suggestedProfiles() {\n      const response = await getSuggestedProfiles(userId, following);\n      setProfiles(response);\n    }\n\n    if (userId) {\n      suggestedProfiles();\n    }\n  }, [userId]);\n  // hint: use the firebase service (call using userId)\n  // getSuggestedProfiles\n  // call the async function ^^^^ within useEffect\n  // store it in state\n  // go ahead and render (wait on the profiles as in 'skeleton')\n\n  return !profiles ? (\n    <Skeleton count={1} height={150} className=\"mt-5\" />\n  ) : profiles.length > 0 ? (\n    <div className=\"rounded flex flex-col\">\n      <div className=\"text-sm flex items-center align-items justify-between mb-2\">\n        <p className=\"font-bold text-gray-base\">Suggestions for you</p>\n      </div>\n      <div className=\"mt-4 grid gap-5\">\n        {profiles.map((profile) => (\n          <SuggestedProfile\n            key={profile.docId}\n            profileDocId={profile.docId}\n            username={profile.username}\n            profileId={profile.userId}\n            userId={userId}\n            loggedInUserDocId={loggedInUserDocId}\n          />\n        ))}\n      </div>\n    </div>\n  ) : null;\n}\n\nSuggestions.propTypes = {\n  userId: PropTypes.string,\n  following: PropTypes.array,\n  loggedInUserDocId: PropTypes.string\n};\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,gBAAgB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAkB,CAAC,GAAAJ,IAAA;EAC1E,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,eAAee,iBAAiBA,CAAA,EAAG;MACjC,MAAMC,QAAQ,GAAG,MAAMb,oBAAoB,CAACO,MAAM,EAAEC,SAAS,CAAC;MAC9DG,WAAW,CAACE,QAAQ,CAAC;IACvB;IAEA,IAAIN,MAAM,EAAE;MACVK,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EACZ;EACA;EACA;EACA;EACA;;EAEA,OAAO,CAACG,QAAQ,gBACdP,OAAA,CAACJ,QAAQ;IAACe,KAAK,EAAE,CAAE;IAACC,MAAM,EAAE,GAAI;IAACC,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAClDV,QAAQ,CAACW,MAAM,GAAG,CAAC,gBACrBlB,OAAA;IAAKa,SAAS,EAAC,uBAAuB;IAAAM,QAAA,gBACpCnB,OAAA;MAAKa,SAAS,EAAC,4DAA4D;MAAAM,QAAA,eACzEnB,OAAA;QAAGa,SAAS,EAAC,0BAA0B;QAAAM,QAAA,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNjB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAM,QAAA,EAC7BZ,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBrB,OAAA,CAACF,gBAAgB;QAEfwB,YAAY,EAAED,OAAO,CAACE,KAAM;QAC5BC,QAAQ,EAAEH,OAAO,CAACG,QAAS;QAC3BC,SAAS,EAAEJ,OAAO,CAACjB,MAAO;QAC1BA,MAAM,EAAEA,MAAO;QACfE,iBAAiB,EAAEA;MAAkB,GALhCe,OAAO,CAACE,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMnB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,GACJ,IAAI;AACV;AAACd,EAAA,CAxCuBF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA0CnCA,WAAW,CAAC0B,SAAS,GAAG;EACtBvB,MAAM,EAAET,SAAS,CAACiC,MAAM;EACxBvB,SAAS,EAAEV,SAAS,CAACkC,KAAK;EAC1BvB,iBAAiB,EAAEX,SAAS,CAACiC;AAC/B,CAAC;AAAC,IAAAF,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}